#!/usr/bin/env bash
set -euo pipefail
. ./scripts/support/assert-in-container "$0" "${@}"

PREFIX=""
for i in "$@"
do
  case "${i}" in
    --prefix=*)
      PREFIX="${i/--prefix=/''}-"
      ;;
    *)
      echo "Unexpected argument: $i"
      exit 1
      ;;
  esac
done


#################################
## server
#################################
DIR=$(mktemp -d --suffix _gcp-builddir)

cp scripts/support/gcp-server-Dockerfile "$DIR/Dockerfile"

cp -f scripts/support/gcp-run-server "$DIR/"
cp -Rf backend/templates "$DIR/"
cp -Rf scripts "$DIR/"

mkdir -p "$DIR/bin"
cp -f backend/_build/default/bin/server.exe "$DIR/bin/"

mkdir -p "$DIR/webroot"
cp -Rf backend/static "$DIR/webroot/"

mkdir -p "$DIR/swagger"
cp -Rf backend/swagger/*  "$DIR/swagger/"

mkdir -p "$DIR/migrations"
cp -Rf backend/migrations/* "$DIR/migrations/"

docker build --build-arg GIT_COMMIT="$(git rev-parse --short HEAD)" -t "${PREFIX}dark-gcp:latest" "$DIR"


#################################
## queue worker
#################################
NDIR=$(mktemp -d --suffix _gcp-qw-builddir)

cp scripts/support/gcp-queueworker-Dockerfile "$NDIR/Dockerfile"

cp -f scripts/support/gcp-run-queueworker "$NDIR/"
cp -Rf backend/templates "$NDIR/"
cp -Rf scripts "$NDIR/"

mkdir -p "$NDIR/bin"
cp -f backend/_build/default/bin/queue_worker.exe "$NDIR/bin/"

mkdir -p "$NDIR/webroot"
cp -Rf backend/static "$NDIR/webroot/"

mkdir -p "$NDIR/swagger"
cp -Rf backend/swagger/*  "$NDIR/swagger/"

mkdir -p "$NDIR/migrations"
cp -Rf backend/migrations/* "$NDIR/migrations/"

docker build --build-arg GIT_COMMIT="$(git rev-parse --short HEAD)" -t "${PREFIX}dark-gcp-qw:latest" "$NDIR"

#################################
## cronchecker
#################################

CDIR=$(mktemp -d --suffix _gcp-cron-builddir)

cp scripts/support/gcp-cronchecker-Dockerfile "$CDIR/Dockerfile"

cp -f scripts/support/gcp-run-cronchecker "$CDIR/"
cp -Rf backend/templates "$CDIR/"
cp -Rf scripts "$CDIR/"

mkdir -p "$CDIR/bin"
cp -f backend/_build/default/bin/cron_checker.exe "$CDIR/bin/"

mkdir -p "$CDIR/webroot"
cp -Rf backend/static "$CDIR/webroot/"

mkdir -p "$CDIR/swagger"
cp -Rf backend/swagger/*  "$CDIR/swagger/"

mkdir -p "$CDIR/migrations"
cp -Rf backend/migrations/* "$CDIR/migrations/"


#################################
## stroller
#################################
SDIR=$(mktemp -d --suffix _gcp-stroller-builddir)

cp scripts/support/gcp-stroller-Dockerfile "$SDIR/Dockerfile"

mkdir -p "$SDIR/bin"
cp -f stroller/target/release/dark-stroller "$SDIR/bin/"

docker build --build-arg GIT_COMMIT="$(git rev-parse --short HEAD)" -t "${PREFIX}dark-gcp-stroller:latest" "$SDIR"


#################################
## tunnel
#################################
docker build --build-arg GIT_COMMIT="$(git rev-parse --short HEAD)" -t "${PREFIX}dark-gcp-cron:latest" "$CDIR"

docker build scripts/support -t "${PREFIX}tunnel:latest" -f scripts/support/tunnel.dockerfile

#################################
## postgres-honeytail
#################################
cd scripts/support/postgres-honeytail \
  && docker build -t "${PREFIX}postgres-honeytail:latest" . \
  && cd -
