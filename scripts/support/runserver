#!/usr/bin/env bash

set -euo pipefail


BINPATH="_build/default/backend/bin"
SERVER_EXE="$BINPATH/server.exe"
QW_EXE="$BINPATH/queue_worker.exe"
CRON_EXE="$BINPATH/cron_checker.exe"

# Stop the server processes
sudo pkill -f nginx || true
sudo pkill -f server.exe || true
pkill -f queue_worker.exe || true
pkill -f cron_checker.exe || true

./scripts/support/wait-for-background-services postgresql

# if it hasn't been compiled yet, wait for it
for ((i=1;i<=1000;i++));
do
  if [[ ! -f "${SERVER_EXE}" || ! -f "${QW_EXE}" || ! -f "${CRON_EXE}" ]]; then
    sleep 0.01
  fi
done

# symlink so nginx logs are visible on the host
if [[ ! -f "/home/dark/app/rundir/logs/nginx-access.log" ]]; then
  sudo rm /var/log/nginx/access.log
  touch /home/dark/app/rundir/logs/nginx-access.log
  ln -s /home/dark/app/rundir/logs/nginx-access.log /var/log/nginx/access.log
fi

# symlink so nginx logs are visible on the host
if [[ ! -f "/home/dark/app/rundir/logs/nginx-error.log" ]]; then
  sudo rm /var/log/nginx/error.log
  touch /home/dark/app/rundir/logs/nginx-error.log
  ln -s /home/dark/app/rundir/logs/nginx-error.log /var/log/nginx/error.log
fi

if [[ -f "${SERVER_EXE}" && -f "${QW_EXE}" && -f "${CRON_EXE}" ]]; then
  LOGS="${DARK_CONFIG_RUNDIR}/logs"
  echo "Running server"
  # shellcheck disable=SC2024
  sudo --preserve-env "${SERVER_EXE}" > "$LOGS/server.log" 2>&1 &
  "${QW_EXE}" --no-health-check > "$LOGS/queue_worker.log" 2>&1 &
  "${CRON_EXE}" --no-health-check > "$LOGS/cron.log" 2>&1 &

  sudo nginx &
else
  echo "Missing binaries"
  exit 1
fi
