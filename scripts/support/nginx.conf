server {
  listen 8000 default_server;
  listen [::]:8000 default_server;

  location / {
    gzip on;
    ## nginx assumes proxies can't handle gzip. That's wrong in our case;
    ## the gke load-balancer will handle it fine, and in fact needs a gzipped
    ## response to gzip.
    ## http://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_proxied
    gzip_proxied any;
    ## gzip these mine types. some other types of files are already gzipped
    ## in a content-aware way (e.g. png, jpeg) so it probably doesn't make
    ## sense to re-gzip them. (text/html isn't in this configuration file
    ## because it's always there, and including it makes nginx warn. )
    gzip_types text/plain text/css application/javascript application/json;
    # don't gzip small files.
    gzip_min_length 1024;
    ## otherwise it'll be 'localhost'
    proxy_set_header Host $host;
    ## all other headers should get passed by default, including, for example
    ## x-forwarded-for and x-forwarded-proto, so that the OCaml application
    ## can know what the user or end-user visited.
    proxy_pass http://localhost:80/;
  }
}
