#!/usr/bin/env bash
. ./scripts/support/assert-in-container $0 $@

set -euo pipefail

NUMBER=$RANDOM
FILENAME="sqldump_$NUMBER.gz"
GSFILENAME=gs://download-gcp-db/$FILENAME
LOGFILE="sqldump_$NUMBER.log"
DB=prodclone
TEMPDB=prodcloneclone

###########################
echo "Exporting DB to $GSFILENAME "
###########################
gcloud sql export sql dark-west $GSFILENAME --database=postgres

###########################
echo "Downloading DB from $GSFILENAME"
###########################
gsutil cp $GSFILENAME .

###########################
echo "Dropping existing DB $DB (killing existing connections)"
###########################
dropdb --if-exists $TEMPDB
createdb $TEMPDB

###########################
echo "Loading DB $TEMPDB (logging to $LOGFILE)"
###########################
# There are some permission statements for cloudsql that are not relevant
gunzip --stdout $FILENAME | grep -v cloudsql | psql -d $TEMPDB > $LOGFILE

###########################
echo "Stopping procs, copying into $DB, restarting"
###########################
./scripts/reset-prodclone

###########################
echo "Deleting dumpfiles ($GSFILENAME, $FILENAME)"
###########################
rm $FILENAME
gsutil rm $GSFILENAME


echo "Done. To reset prodclone again, run ./scripts/reset-prodclone"
