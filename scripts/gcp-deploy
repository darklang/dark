#/usr/bin/env bash

set -euo pipefail

PROJECT="balmy-ground-195100"
IMAGE="gcr.io/$PROJECT/dark-prod"
ZONE="--zone=dark-single-instance"
DNS_SETTINGS="--name=darksingleinstance.com. --type=A $ZONE"
FULL_DNS_SETTINGS="$DNS_SETTINGS --ttl=300"
INSTANCE=instance-2

#GCLOUD="scripts/run-in-docker gcloud --project=$PROJECT "
GCLOUD="gcloud --project=$PROJECT "

#########################
# Deploy Docker image
#########################

docker tag dark-gcp:latest $IMAGE
$GCLOUD docker -- push $IMAGE


#########################
# Configure instance and containers
#########################

$GCLOUD compute instances add-metadata $INSTANCE \
  --metadata-from-file startup-script=scripts/support/gcp-instance-startup-script


$GCLOUD beta compute instances update-container $INSTANCE \
  --container-image $IMAGE \
  --container-env-file config/gcp-prod \
  --container-mount-host-path mount-path=/home/dark/gcp-persistdir,host-path=/mnt/disks/dark-disk/persistdir,mode=rw \
  --container-mount-host-path mount-path=/home/dark/gcp-rundir,host-path=/mnt/disks/dark-disk/rundir,mode=rw

#########################
# Set DNS
#########################
OLDIP=$($GCLOUD dns record-sets list $DNS_SETTINGS \
  --format=json | jq --raw-output .[0].rrdatas[0])
NEWIP=$($GCLOUD compute instances describe $INSTANCE \
  --format=json | jq --raw-output .networkInterfaces[0].accessConfigs[0].natIP)


if [[ -e transaction.yaml ]]; then
  $GCLOUD dns record-sets transaction abort $ZONE
fi

$GCLOUD dns record-sets transaction start $ZONE

$GCLOUD dns record-sets transaction remove ${FULL_DNS_SETTINGS} $OLDIP
$GCLOUD dns record-sets transaction add ${FULL_DNS_SETTINGS} $NEWIP

$GCLOUD dns record-sets transaction execute $ZONE

rm -f transaction.yaml
