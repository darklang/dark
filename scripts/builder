#!/usr/bin/env bash

set -euo pipefail

# --------------
# Build image from clean start
# --------------
if [[ ! -v NEVER_REBUILD_DOCKER ]]; then
  echo "Building docker image"
  docker build -t dark .

  echo "Removing running containers"
  c=$(docker ps --filter "ancestor=dark" -q)
  if [[ ! -z "${c}" ]]; then
    docker kill -f "${c}";
  fi
fi

# --------------
# --------------
echo "watching for local changes"
scripts/support/reload-browser > logs/browser.log 2>&1 &

# --------------
# Conduit
# --------------
if [ ! -v CI ]; then
  if [ ! -d ../conduit-frontend ]; then
    echo "pulling the conduit frontend"
    pushd .. && git clone git@github.com:darklang/conduit-frontend && popd
  fi
fi

# --------------
# Mounts
# --------------
if [ -v CI ]; then
  # see "copy in data" in .circleci/config.yml
  MOUNTS="--volumes-from vols"
else
  MOUNTS="--mount type=bind,src=$PWD,dst=/home/dark/app \
          --mount type=bind,src=$PWD/../conduit-frontend,dst=/home/dark/conduit-frontend"
fi

# --------------
# fswatch
# --------------
# Avoid hanging when --watch is not called. This runs the `true` command
# instead of fswatch.
FSWATCH="true"
for i in "$@"
do
  case $i in
    --watch)
    FSWATCH="fswatch --event-flag-separator=, -r * -x "
    ;;
  esac
done

if [ -v CI ]; then
  ENV_FILE="config/circleci"
else
  ENV_FILE="config/local_dev"
fi


# --------------
# --------------
echo "Run the build"
$FSWATCH | docker run \
             --rm \
             -i \
             $MOUNTS \
             --privileged \
             --dns 127.0.0.1 \
             --dns 8.8.8.8 \
             --dns 8.8.4.4 \
             --env-file $ENV_FILE \
             -v pgconf:/etc/postgresql \
             -v pglogs:/var/log/postgresql \
             -v pgdata:/var/lib/postgresql \
             -p 8000:8000 \
             -p 8001:8001 \
             --security-opt seccomp=scripts/support/chrome-seccomp.json \
             -w /home/dark/app \
             dark \
             scripts/support/build-server "${@}"

