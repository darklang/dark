#!/usr/bin/env bash
set -euo pipefail

INVIDEO=$1
INSUBS=$2
CCOVERLAY=$(dirname "$0")/cc.png

if ( ! command -v ffmpeg ); then
  echo "This script depends on ffmpeg."
  exit 1
fi

if [[ "$INVIDEO" == "" ]]; then
  echo "No in video (foo.mp4?) provided."
  exit 1
fi

if ! [[ "$INSUBS" =~ .srt$ ]]; then
  echo "No subtitles provided."
  exit 1
fi

# if this file needs scaling at some point, use imagemagick:
# convert cc.png -resize 120x120 cc.png
if [[ ! -f $CCOVERLAY ]]; then
  echo "No ccoverlay image found."
  exit 1
fi

tmpfile=$(mktemp /tmp/postprocess-video.XXXXXX.mp4)
rm "$tmpfile" # so ffmpeg doesn't ask if you want to overwrite it

# Add CCOVERLAY watermark in bottom right corner
ffmpeg -i "$INVIDEO" \
  -vf "movie=${CCOVERLAY} [watermark]; [in][watermark] overlay=(main_w-overlay_w-10):(main_h-overlay_h-10) [out]" \
  "$tmpfile"

# Add soft subs (not hard; hard are burned-in images, soft can be turned on/off
# and are also _text_ so screenreader/braille-display accessible)
#
# If you want hard subs, replace the whole `-c ...` with, I believe
# `-vf subtitles=$INSUBS`
ffmpeg -i "$tmpfile" -f srt -i "$INSUBS" -c:v copy -c:a copy -c:s mov_text out.mp4

rm "$tmpfile"

echo "Done! See out.mp4"
