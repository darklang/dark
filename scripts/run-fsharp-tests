#!/usr/bin/env bash
. ./scripts/support/assert-in-container "$0" "$@"

set -euo pipefail

trap ctrl_c INT

function ctrl_c() {
  killall -9 Build/out/Tests
  exit 1
}

DEBUG=false

for i in "$@"
do
  case "${i}" in
    --debug)
    DEBUG=true
    shift
    ;;
  esac
done

sudo killall legacyserver.exe || true
sudo killall ocamltestserver.exe || true

./scripts/support/wait-for-background-services postgresql
dropdb --if-exists testdb
createdb testdb

./scripts/support/runserver
./scripts/support/runlegacyserver
./scripts/support/run-ocaml-test-server

# CLEANUP This is where the migrations are run for testdb at the moment
DARK_CONFIG_STATIC_HOST=static.darklang.localhost:8001 ./scripts/wait-until-server-ready

# Expecto has a number of async bugs causing it to hang. It appears to be due
# to the test framework though it's hard to tell. It's solved by disabling the
# spinner and not running the tests in parallel.

if [[ "$DEBUG" == "true" ]]; then
  cd fsharp-backend
  DARK_CONFIG_TELEMETRY_EXPORTER=none \
  DARK_CONFIG_ROLLBAR_ENABLED=n \
  DARK_CONFIG_DB_HOST=localhost \
  DARK_CONFIG_DB_DBNAME=testdb \
  DARK_CONFIG_DB_USER=dark \
  DARK_CONFIG_DB_PASSWORD=eapnsdc \
  lldb -- Build/out/Tests --no-spinner --sequenced "${@}"
else
  cd fsharp-backend
  DARK_CONFIG_TELEMETRY_EXPORTER=none \
  DARK_CONFIG_ROLLBAR_ENABLED=n \
  DARK_CONFIG_DB_HOST=localhost \
  DARK_CONFIG_DB_DBNAME=testdb \
  DARK_CONFIG_DB_USER=dark \
  DARK_CONFIG_DB_PASSWORD=eapnsdc \
  Build/out/Tests --no-spinner --sequenced "${@}"
fi
