#!/usr/bin/env bash

. ./scripts/support/assert-in-container "$0" "$@"

set -euo pipefail

DARK_CLUSTER_REGION="us-west1"
DARK_CLUSTER_CLOUDSQL_INSTANCE_NAME="cloudsql-postgres-$(date +"%s")"

HELP="$(cat <<EOF
Usage: $0 REQUIRED_ARGS [OPTIONS]

A script that creates a new CloudSQL Postgres Instance.

Other Options:

  --region=...                  The Google cloud region to deploy into
                                (default $DARK_CLUSTER_REGION).
  --cloudsql-instance-name=...  The name of the new cluster (default is to append
                                unix time to 'cloudsql-postgres-',
                                a la $DARK_CLUSTER_CLOUDSQL_INSTANCE_NAME).
  --cloudsql-pass=...           The password for the cloudsql DB
  --help                        Display this menu.

EOF
)"

for i in "$@"
do
  case "${i}" in
    --region=*)
      DARK_CLUSTER_REGION="${i/--region=/''}"
      ;;
    --cloudsql-instance-name=*)
      DARK_CLUSTER_CLOUDSQL_INSTANCE_NAME="${i/--cloudsql-instance-name=/''}"
      ;;
    --cloudsql-pass=*)
      DARK_CLUSTER_CLOUDSQL_PASS="${i/--cloudsql-pass=/''}"
      ;;
    --help)
      echo "$HELP"
      exit 0
      ;;
    *)
      echo "Unexpected argument: $i"
      echo "$HELP"
      exit 1
      ;;
  esac
done

if [ ! -v DARK_CLUSTER_CLOUDSQL_PASS ]; then
  echo "--cloudsql-pass is required"
  echo "$HELP"
  exit 1
fi

gcloud sql instances create "${DARK_CLUSTER_CLOUDSQL_INSTANCE_NAME}" \
  --database-version=POSTGRES_9_6 \
  --cpu=8 \
  --memory=30GB \
  --region="${DARK_CLUSTER_REGION}" \
  --availability-type=REGIONAL \
  --storage-auto-increase \
  --maintenance-window-day=SAT \
  --maintenance-window-hour=23

gcloud sql users set-password postgres \
  --instance="${DARK_CLUSTER_CLOUDSQL_INSTANCE_NAME}" \
  --password="${DARK_CLUSTER_CLOUDSQL_PASS}"
