#!/usr/bin/env bash
set -euo pipefail
. ./scripts/support/assert-in-container $0 $@

c=$(docker ps --filter "ancestor=dark-gcp:latest" -q)
if [[ ! -z "${c}" ]]; then
  echo "Killing running containers"
  docker kill "${c}";
fi

case ${1:-server} in
  "queue") IMAGE="dark-gcp-qw";;
  "server") IMAGE="dark-gcp";;
  "cron") IMAGE="dark-gcp-cron";;
  *) IMAGE="dark-gcp";;
esac

./scripts/support/create-dark-dev-network

echo "Starting new container"
docker run \
  --rm \
  -it \
  -p 9000:80 \
  --network dark-dev-net \
  --name dark-local-gcp \
  --env-file config/gcp-local \
  --mount type=bind,src=${HOST_PWD}/gcp-rundir,dst=/home/dark/gcp-rundir \
  --mount type=bind,src=${HOST_PWD}/gcp-persistdir,dst=/home/dark/gcp-persistdir \
  $IMAGE:latest


