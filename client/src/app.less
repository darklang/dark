html {
  height: 100%;
}

/* From "default dark" in https://chriskempson.github.io/base16/ */
@black1: #181818; // toplevel bg
@black2: #282828; // sidebar bg, entrybox bg, debugging buttons
@grey1 : #383838; // hovered AST bg
@grey2 : #585858; // placeholder text
@grey3 : #b8b8b8;
@white3: #d8d8d8; // link color
@white2: #e8e8e8;
@white1: #f8f8f8; // active link
@red   : #ab4642; // error
@orange: #dc9656; // routing, lambda functions
@yellow: #f7ca88; // routing table, database migration
@green : #a1b56c; // executable buttons, feature flag icons
@cyan  : #86c1b9;
@blue  : #7cafc2; // pipe
@purple: #ba8baf; // variation used in strings
@brown : #a16946;
@darkblue: #2B466F; // selected AST bg

@selected-background: lighten(@black1, 5%);
@top-border: lighten(@black1, 5%) 2px dotted;
@blank-underline: 1px dashed @grey2;
@code-font-size: 13.3333px;
@string-color: lighten(@purple, 10%);

/* Mixins */
.from (colors, @color) {
  color: @color;
}
.to (colors, @color) {
  color: @color;
}

/* TODO really ugly in LESS, during our tech debt week, I may attempt to migrate our to SASS. */
.keyframes (@name, @from, @to, @vendor:"", @bind:"") {
  @keyf: ~"@{bind}@@{vendor}keyframes @{name} { `'\n'`from ";
  @{keyf} {
      .from(@name,@from);
        }
      to {
        .to(@name,@to);
      }
}
 .animation-keyframes (@name, @from, @to, @anim-selector, @anim-props) {
  @bind: "} `'\n'`";
  .keyframes (@name, @from, @to, "-moz-");
  .keyframes (@name, @from, @to, "-webkit-", @bind);
  .keyframes (@name, @from, @to, "-o-", @bind);
  .keyframes (@name, @from, @to, "-ms-", @bind);
  .keyframes (@name, @from, @to, "", @bind);
  @anim: ~"} `'\n'`.@{anim-selector}";
  @{anim} {
    -moz-animation: ~"@{name} @{anim-props}";
    -webkit-animation: ~"@{name} @{anim-props}";
    -o-animation: ~"@{name} @{anim-props}";
    -ms-animation: ~"@{name} @{anim-props}";
    animation: ~"@{name} @{anim-props}";
  }
}
 .animation-keyframes(colors, @red, @grey3, db-lock-hover, 1s 1 normal);

 /* Body */

::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 7px;
}
::-webkit-scrollbar-thumb {
  border-radius: 7px;
  background-color: @grey1;
}

.default() {
  margin: 0;
  padding: 0;
  background-color: @black2;
  color: @grey3;
}

@keyframes showErrorPanel {
  from { bottom: -70px; }
  to { bottom: 0; }
}

@keyframes hideErrorPanel {
  from { bottom: 0; }
  to { bottom: 70px; }
}

body {
  .default;
  height: 100%;
}

.default-link {
  text-decoration: none;
  &:link, &:visited {
    color: @white1;
  }
  &:hover, &:active {
    color: @yellow;
  }
}

/********************
 * Top level
 ********************/

#grid {
  background: @black1;
  height: 100vh;
  overflow: hidden;
  position: relative;

  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

body #grid * {
  &:not(.fa) { // skip fontawesome
    font-family: 'Fira Code', monospace;
  }
}

@axis-style: dotted 1px @grey3;

#canvas {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  min-height: 100%;
  min-width: 100%;
  overflow: visible;

  &::before { //y-axis
    content: "";
    display: block;
    position: absolute;
    height: 2000%;
    top: -1000%;
    left: 0;
    border-left: @axis-style;
  }

  &::after { // x-axis
    content: "";
    display: block;
    position: absolute;
    width: 2000%;
    top: 0;
    left: -1000%;
    border-top: @axis-style;
  }

  .node {
    position: absolute;
  }
}

#buttons {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  background-color: @black2;
  padding: 4px;

  .specialButton {
    margin-right: 8px;
    padding: 4px;
    color: @orange;

    &:hover, &:active {
      color: @green;
      background-color: @grey1;
    }

    &#integrationTestSignal {
      display: inline-block;
    }

    &.environment.prodclone {
      color: magenta;
    }
  }

  .status {
    float: right;
    margin-right: 8px;

    &.error {
      color: lighten(@red, 20%);

      a {
        .default-link
      }
    }
  }
}

.error-panel {
  width: 100%;
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 20px;
  padding-bottom: 50px;
  background-color: @red;
  color: @white1;
  position: absolute;
  left: 0;
  bottom: -70px;

  animation-duration: 0.5s;

  &.show {
    bottom: 0;
    animation-name: showErrorPanel;
  }
}

.as-pointer {
  cursor: pointer;
}

.axis {
  background: #777;
  height: 200%;
  position: absolute;
  transform: translate(0, -50%);
  width: 1px;
  &.horizontal {
    height: 1px;
    transform: translate(-50%, 0);
    width: 200%;
  }
}

//*************
// Toplevel
//*************
.toplevel {
  display: flex;
  flex-direction: column;
  width: max-content;
  min-width: 245px;
  padding: 4px;
  border: @top-border;

  &.selected {
    background-color: @selected-background;
    outline: 2px @darkblue solid;
  }

  .mouseovered {
    background-color: lighten(@darkblue, 10%);
    &.blank, .blank {
      color: @white3;
    }
  }

  .commandTarget {
    .selected;
  }

  .blank {
    min-width: 8ch;
    .blank-box-style;
    .blank-text-style;
  }

  .blankOr.selected {
    background-color: @darkblue;
    color: @white2;

    &.tstr {
      color: @string-color;
    }

    &.blank {
      color: @grey3;
    }
  }

  .view-data {
    bottom: 100%;
    left: 0px;
    position: absolute;
    width: 100%;
    .selected-value {
      background: @black1;
      color: magenta;
      display: block;
      font-size: 0.6333em;
      max-width: 100%;
      padding: 4px;

      width: max-content;
      word-break: break-all;
      word-wrap: break-word;
      white-space: pre-wrap;
    }
    ul.request-cursor {
      bottom: 1em;
      float: left;
      list-style-type: none;
      max-height: calc(~"1.5em + 1px");
      overflow: hidden;
      width: 100%;
      li {
        float: left;
        &.mouseovered {
          color: @orange;
          cursor: pointer;
          &:before {
            content: attr(data-content);
            background-color: @grey1;

            display: block;
            position: absolute;
            left: -4px;
            bottom: calc(~"-100% + 37px");

            height: auto;
            width: max-content;
            max-width: 100%;
            padding: 4px;

            font-size: 0.7em;
            white-space: pre-wrap;
            word-break: break-all;
            word-wrap: break-word;
          }
        }
        &.active {
          border-bottom: 1px solid @orange;
        }
        &.tipe-Error {
          color: @red;
        }
        &.tipe-Incomplete {
          color: @orange;
        }
      }
    }
  }
}

//*************
// Routing table
//*************

#sidebar-left {
  width: max-content;
  max-height: calc(~"100% - 50px");
  overflow-y: scroll;
  position: fixed;
  top: 0;
  left: 0;

  &:hover {
    border: 2px solid @blue;
  }
}

.viewing-table {
  background-color: @black2;
  padding: 8px;
  position: relative;
  width: max-content;
  overflow: visible;

  .routing-section {
    .header {
      width: 300px;
      color: @orange;

      .title {
        margin-right: 5px;
        padding-bottom: 6px;
      }
      .count {
        font-weight: bold;
      }

      .verb-link, .button-link {
        float: right;
      }
    }
    &.empty .header {
      &::before {
        content: "- ";
        font-weight: bold;
      }
    }
    &.deleted > .routing-section {
      margin-left: 10px;
    }

    .button-link {
      cursor: pointer;
    }

    .verb-link, .button-link {

      .default-link;
      color: @grey2;
      &:link, &:visited {
        color: @grey2;
      }
      &:hover {
        color: @yellow;
      }
    }

    .routes, .404s, .dbs {
      padding-bottom: 8px;
      margin-bottom: 8px;
      border-bottom: 1px @white1 solid;
    }

    .fof {
      display: flex;
      flex-direction: row;
      justify-content: space-between;

      .path {
        color: @white3;
      }

      .modifier {
        color: @grey2;
      }
    }

    .handler, .simple-route {
      display: flex;
      flex-direction: row;
      justify-content: space-between;

      .name {
        color: @white3;
      }

      .external {
        color: @orange;
        &:hover {
          color: @yellow;
        }
      }

      .verbs {
        color: @grey2;
      }
    }
  }

  .fns {
    .default-link.unused {
      color: @grey2;
    }

    i.fa {
      color: @grey2;
      margin-left: 4px;
    }
  }
}

//*************
// DB
//*************
.db {
  margin: 10px;
  display: flex;
  flex-direction: column;

  &.migration-view {
    position: absolute;
    top: -12px;
    left: calc(~"100% + 20px");
    min-width: 245px;
    padding: 24px;
    border: @top-border;
    border-color: @yellow;
    border-width: 1px;
    background-color: @black1;

     .dbname {
      .version {
        color: @yellow;
      }
    }

    .col {

      &.roll-fn {
        margin-top: 12px;
        flex-direction: column;

        .fn-title {
          font-size: 0.8rem;

          .varname {
            color: @grey2;
          }
        }
      }

      &.actions {
        margin-top: 25px;
        flex-wrap: nowrap;
        justify-content: space-around;

        button {
          padding: 8px;
          font-size: 10px;
          background-color: @grey1;
          color: @yellow;
          border: 1px solid @yellow;
          text-transform: uppercase;

          &:disabled {
            color: @grey2;
            border-color: @grey2;
          }
        }
      }

      &.err {
        margin-top: 25px;
        font-size: 10px;
        color: lighten(@red, 15%);
        font-style: italic;
      }
    }

    .delete-col {
      color: @grey2;

      .fa {
        &:hover {
          color: @white1;
        }
      }
    }

  }

  .fa-lock, .fa-unlock {
    position: fixed;
    margin-left: -20px;
    margin-top: -22px;
    &.fa-lock {
      color: @red;

      &::after {
        content: "To migrate schema, click on the lock";
        color: @grey3;
        font-family: 'Fira Code', monospace;
        font-size: 8px;
        font-weight: 300;
        position: relative;
        top: -12px;
        left: 4px;
        font-style: italic;
      }

       &:hover {
        .db-lock-hover;
        color: @grey3;
      }
    }

    &.fa-unlock {
      color: @green;
    }
  }


  .dbname {
    background-image: url('/_db.png');
    background-position: left center;
    background-repeat: no-repeat;
    padding-left: 20px; /* Adjust according to image size to push text across. */
    margin-bottom: 10px;
    margin: 0 auto; /* center the db name */
    &::before {
      content: "DB: ";
      font-weight: bold;
      font-size: 110%;
    }
  }

  .col {
    display: flex;
    flex-direction: row;
    margin-bottom: 4px;
    margin-top: 4px;
    text-align: left;

    .name, .type {
      flex: 1;
      font-size: 10px;
      height: 15px;
      margin-left: 4px;
      margin-right: 4px;
      padding-left: 1ch;
      padding-right: 1ch;
      #search-container {
        font-size: 10px;
        height: 10px;
        margin-bottom: -1px;
        margin-left: -6px;
        min-width: calc(~"100% + 12px");
        padding-bottom: 5px;
      }

      &.blank {
        height: 15px;
      }
      .entry {
        background: transparent;
        // Don't center text-entry, it makes everything weird
        text-align: left;
      }
    }
    .migration-view {
      position: absolute;
      width: max-content;
      left: calc(~"100% + 6px");
      .default;
    }


  }
}

.user-fn {
  margin: 10px;
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid @orange;
  padding-bottom: 10px;

  .ufn-name {
    padding-bottom: 10px;
    margin: 0 auto;
    .entry {
      form {
        margin-top: 0;
        position: relative;
        #search-container {
          min-width: 0;
        }
      }
    }
  }

  .col {
    display: flex;
    flex-direction: row;
    margin-bottom: 4px;
    margin-top: 4px;
    text-align: center;

    .name, .type {
      flex: 1;
      font-size: 10px;
      height: 15px;
      margin-left: 4px;
      margin-right: 4px;
      padding-left: 1ch;
      padding-right: 1ch;
      #search-container {
        font-size: 10px;
        height: 10px;
        margin-bottom: -1px;
        margin-left: -6px;
        min-width: calc(~"100% + 12px");
        padding-bottom: 5px;
      }

      &.blank {
        height: 15px;
      }
      .entry {
        background: transparent;
        // Don't center text-entry, it makes everything weird
        text-align: left;
        form {
          margin-top: 0;
          position: relative;
        }
      }
    }
  }
}


//*************
// Handler
//*************

.toplevel .spec-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;

  color: @orange;
  font-size: 8pt;

  border-bottom: 1px solid @orange;
  padding-bottom: 4px;

  .name, .modifier, .module {
    margin: 0 4px;
  }

  // remove dotted outline after clicking (source: reset-normalize)
  a:focus {
    outline: none;
  }
  .external {
    padding-right: 1ch;
    color: @orange;
    vertical-align: center;
  }

  .handler-lock {
    color: @white1;

    &.is-locked {
      color: @red;
    }
  }
}




//*************
// AST macros
//*************
.indent() {
  margin-left: 16px;
}

.string-style() {
  color: @string-color;
  font-style: italic;
  max-width: 120ch;
  min-height: 16px;
  white-space: pre-wrap;
  word-break: break-all;
  word-wrap: break-word;
  &.short-strings {
    max-width: 40ch;
    white-space: pre-wrap;
    word-break: break-all;
    word-wrap: break-word;
  }
}

.blank-box-style() {
  height: 15px;
  border-bottom: @blank-underline;
}
.blank-text-style() {
  color: @grey2;
  font-style: italic;
  font-size: 8pt;
  text-align: center;
  padding-left: 1ch;
  padding-right: 1ch;
  margin-left: 4px;
  margin-right: 4px;
}

.layout-block() {
  display: block;
}

.layout-inline() {
  display: inline-block;
}

.highlighted-indent() {
  margin-left: 8px;
  padding-left: 8px;
  border-left: 1px solid @orange;
}

.precedence (@depth) {
  .precedence-@{depth} {
      &:not(.mouseovered),
      &:not(.mouseovered) .entry form #search-container #suggestionBox,
      &:not(.mouseovered) .string-entry
      {
        background-color: fade(@grey2, 5% + (@depth * 5%) );
      }

      &.selected {
        background-color: fade(@darkblue, 70% + (@depth * 5%));
      }
  }
}

//*************
// AST
//*************
.ast {
  font-size: 10pt;
  padding-right: 8px;
  padding-left: 8px;
  padding-top: 24px;
  padding-bottom: 24px;
  white-space: pre;
  width: max-content;
  .layout-block;

  div {
    .layout-inline;
    vertical-align: top;
  }

  .rop-rail {
    padding-right: 30px;
    border-right: solid 2px rgba(255, 0, 0, 0.3);
  }

  .value-error {
    background-color: fadeout(red, 70%);
  }

  .incomplete {
    /* background-color: mix(@black1, rgb(255, 128, 000), 85%); */
  }

  .letexpr > .letbody {
    .layout-block;
  }

  .lambdaexpr {
    .layout-block;
    .highlighted-indent;
  }

  .lambdabinding, .arrow {
    color: @orange;
  }

  .value.tstr {
    .string-style;
    border: 0;
    font-size: @code-font-size;
    margin: 0;
    .quote {
      display: inline-block;
    }
  }

  .quote {
    .string-style;
    display: none;
    width: 1.5ch;
    &.quote-start {
      left: 0;
      top: 0;
      &:before {
        content: "“";
      }
    }
    &.quote-end {
      bottom: 0;
      right: 0;
      &:before {
        content: "”";
      }
    }
  }

  .related-change {
    color: @yellow;
  }

  .lambdabody {
    .layout-block;
  }

  .ifbody {
    .layout-block;
    .indent;
  }

  .elsebody {
    .layout-block;
    .indent;
  }

  .objectpair {
    .layout-block;
    .indent;
  }

  .matchcase {
    .layout-block;
    .indent;
  }

  .atom {
    margin-left: 4px;
    margin-right: 4px;
  }

  .atom.fieldaccessop {
    margin-left: -4px;
    margin-right: 0px;
  }
  .atom.constructor-pattern {
    margin-left: 0px;
  }

  .atom.fieldname {
    margin-left: 0px;
  }

  .moduleseparator {
    color: @green;
  }

  .keyword, .emit {
    color: @green;
  }

  .fncall {
    .arg-on-new-line {
      .layout-block;
      margin-left: 2ch;
      &::before {
        content: attr(param-name);
        width: auto;
        position: absolute;
        right: calc(~"100% - 10ch");
        color: @grey2;
        font-size: 85%;
      }
    }

    .execution-button {
      position: absolute;
      font-size: 60%;
      &:hover {
        font-size: 100%;
        font-weight: strong;
        margin-left: -16px;
        margin-top: -5px;
        cursor: pointer;
      }
      margin-left: -16px;
      transition: color linear 0.1s;
      &.execution-button-unavailable {
        color: grey;
      }
      &.execution-button-needed {
        color: green;
      }
      &.execution-button-repeat {
        color: green;
      }
      &.is-executing {
        color: white;
        transition: none;
        i {
          animation: a 0.75s infinite linear;
        }
      }
    }
  }

  .precedence(1);
  .precedence(2);
  .precedence(3);
  .precedence(4);
  .precedence(5);
  .precedence(6);

  .threadexpr {

    .threadmember {
      .layout-block;

      &:first-child > .thread.pipe {
        display: none;
      }

      .thread.pipe {
        margin-top: 1px;
        margin-right: 0px;
        font-size: 70%;
        color: @blue;
      }
    }
  }

  // useful while working on wideness
  /* .too-wide { */
  /*   background-color: @green !important; */
  /* } */
}

/********************
 * Entry box
 ********************/

// TODO: figure out proper entry box positioning
// -- this is a demo hack
.spec-header .entry form {
  margin-top: 0px;
  position: relative;
}

.db .entry form {
  position: relative;
  margin-top: 0px;
}

.ast .entry form {
  position: relative;
  margin-top: 0px;
}

.selecting-command .entry {
  margin-top: 4px;
  display: block;
}


.entry {
  // headers need to be relative to position them. We need to be above
  // the headers, and position:relative allows us to do it.
  cursor: default;
  background: @black2;
  color: @white3;
  margin-left: 4px;
  margin-right: 4px;
  width: auto;

  /* width: 96px; // keeps autocomplete appearing when Creating */
  .types {
    float: right;
    text-transform: lowercase;
    font-family: monospace;
    font-size: 80%;
  }
  form {
    // makes the form takes up no space in the DOM, meaning we don't
    // expand the top-level
    position: absolute;

    // account for the space of both input boxes
    margin-top: -12px;

    #search-container {
      background: @selected-background;
      border: 0;
      margin: 0;
      padding: 0;
      position: relative;
      #entry-box {
        // as much like the blank box as possible
        background: transparent;
        color: transparent;
        caret-color: @grey3;
        position: relative;
        text-align: left;
        vertical-align: baseline;
        width: 100%;
      }
      #suggestionBox {
        color: rgb(84,84,84);
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
      #fluidWidthSpan {
        color: @grey3;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
    }
  }
  #autocomplete-holder {
    font-size: 11.3px;
    max-height: 90px;
    overflow-y: scroll;
    position: absolute;
    text-align: initial;
    width: 350px;
    z-index: 1;

    .autocomplete-item {
      background: @black2;

      &.highlighted {
        background: @darkblue;
      }

      &.greyed {
        color: @grey2;
      }
    }
  }
}

.versioned-function {
  display: inline-block;
  vertical-align: baseline;

  .version {
    font-size: 0.6rem;
    color: @grey2;
    margin-left: 2px;
  }
}

.ast div .selected {
  .versioned-function .version {
    color: @green;
  }
}

.letvarname, .fieldname {
  & > .entry {
    margin-left: 0;
    margin-right: 0;
  }
}

.omnibox {
  // honestly couldnt tell you where this magic number comes from
  font-size: @code-font-size;
  margin-top: -9px;
  .string-entry {
    margin-top: -21px;
  }
  .entry form #search-container {
    min-width: 8ch;
  }
}


// ---------------------------
// Strings
// ---------------------------
.string-entry {
  border: 0;
  font-size: @code-font-size;
  margin: 0;
  padding-left: 1.5ch;
  padding-right: 1.5ch;
  position: relative;
  &::before {
    content: "“";
    .string-style;
    display: inline-block;
    left: 0;
    position: absolute;
    top: 0;
    width: 1.5ch;
  }
  &::after{
    content: "”";
    .string-style;
    bottom: 0;
    display: inline-block;
    position: absolute;
    right: 1ch;
    width: 1.5ch;
  }
  &.big-string-entry {
    padding-left: 0;
    padding-right: 0;
    &::before {
      width: 0;
    }
    &::after{
      width: 0;
    }
  }
  .string-container {
    display: block;
    margin: 0;
    padding: 0;
    position: relative;
    width: 100%;
  }
  #entry-box {
    background: transparent;
    color: transparent;
    caret-color: @grey3;
    margin: 0;
    padding: 0;
    position: relative;
    text-align: left;
    vertical-align: baseline;
    white-space: pre-wrap;
    width: 100%;
    word-break: break-all;
    word-wrap: break-word;
  }
  textarea {
    color: @string-color !important;
    display: block;
    overflow: hidden;
    resize: none;
  }
  #fluidWidthSpan {
    .string-style;
    left: 0;
    margin: 0;
    padding: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}



// ---------------------------
// Types
// ---------------------------
/*
.spec-type {
  .blank-text-style;
  padding: 8px;

  & > :not(.header)  {
    margin-left: 2ch;
  }
  .type-object {
    .layout-block;
    span {
      .layout-inline;
    }
    margin-left: 2ch;
    .colon {
      padding-right: 0.5ch;
    }
  }
}
*/

// This creates an ancestor for the absolutely positioned elements around a handler to be positioned agains
//
.sidebar-box {
  background: @black1;
  position: relative;
}

.documentation-box {
  position: absolute;
  bottom: calc(~"100% + 5px");
  left: 0;
  font-size: 11px;
  padding: 5px 10px;
  background: @grey1;
  color: @white3;
  border-radius: 13px;
}

.right-button {
  margin: 0;
  padding: 0;
  color: @grey3;

  &:hover {
    color: lighten(@grey3, 15%);
    cursor: pointer;
  }
}

.expr-actions {
  position: absolute;
  right: -20px;
  top: 50%;
  width: 16px;

  i.fa {
    .right-button;
    display: block;
  }
}

.parameter-btn {
  font-size: 75%;

  &.allowed {
    &:hover {
      color: @green;
      cursor: pointer;
    }
  }

  &.disallowed {
    color: lighten(@grey1, 20%);

    &:hover {
      &:after {
        content: attr(title);
        position: absolute;
        left: 100% + 10px;
        color: @red;
        width: max-content;
      }
    }
  }

  &.info {
    color: lighten(@grey1, 20%);

    &:hover {
      &:after {
        content: attr(title);
        position: absolute;
        left: 0;
        top: -20px;
        color: @blue;
        width: max-content;
      }
    }
  }
}

.edit-fn {
  position: absolute;
  right: -16px;
  bottom: 0;
  .right-button;

  &.flagged {
    right: 0;
    bottom: -32px;
  }
}

.ast div {
  &.display-livevalue {

    &:before {
      content: attr(data-live-value);
      position: absolute;
      right: calc(~"100% + 30px");
      font-style: normal;


      padding: 4px;
      width: max-content;
      max-width: 250px;

      white-space: pre-wrap;
      word-break: break-all;
      word-wrap: break-word;
      font-size: @code-font-size * 0.85;
      color: @grey3;

      background-color: @black2;
      outline: 0.4px @grey2 dotted;
    }
  }
}

.expr-label {
  color: @grey2;
  font-style: italic;
  font-size: 88%;
}

@vertical-spacing: 20px;
@horizontal-padding: 8px;
@icon-spacing: 6px;

.flagged {
  .fa-flag {
    color: @red;
    font-size: 8px;
  }

  .feature-flag {
    position: absolute;
    left: calc(~"100% - 32px");
    margin-top: -8px;
    background-color: transparent;
    border-style: solid;
    border-color: @black2;
    border-width: 0;
    box-sizing: border-box;

    i.fa {
      color: @grey3;

      &:hover {
        color: @white1;
      }
    }

    &.expand {
      border-width: 1px;
      left: calc(100% + 10px);
      background-color: @black1;

      .row {
        display: block;
      }

      .row.expressions {
        display: inline-flex;
      }

      .row.title-bar {
        background-color: @black2;

        .actions {
          float: right;
          margin-right: 0;
        }
      }

    }

    .row {
      display: none;
      margin-top: @vertical-spacing;
      min-width: 100%;
      width: auto;
      padding: 0 @horizontal-padding;
      box-sizing: border-box;

      &:first-child {
        margin-top: 0;
      }

    }

    .title-bar {
      display: block;
      min-width: 150px;
      width: 100%;
      background-color: transparent;
      padding: 4px @horizontal-padding;

      .flag-name {
        width: 60%;
      }

      .actions {
        width: 30%;
        float: left;
        text-align: right;
        margin-right: 2px;

        i.fa {
          margin-left: @icon-spacing;
        }

        i.fa.fa-flag {
          font-size: 12px;
        }
      }
    }

    .condition {
      .expr-label {
        display: block;
      }
    }

    .expressions {
      min-width: 100%;
      width: auto;
      margin-bottom: @vertical-spacing;
      flex-direction: row;
      flex-wrap: nowrap;
      justify-content: space-between;
      align-content: stretch;

      .expr-label {
        padding-left: 4px;
      }

      .cond-expr {
        display: inline-block;
        align-self: flex-start;
        min-width: 200px;
        width: max-content;
        vertical-align: top;
        box-sizing: border-box;

        .icon {
          margin-left: @icon-spacing;
        }

        .expr-block {
          display: block;
          width: auto;
        }

        &:first-child {
          border-right: 2px @grey2 solid;
          padding-right: 1ch;
          margin-right: 1ch;
        }
      }

      .expr-actions {
        display: none;
      }
    }
  }

  .end-ff {
    position: absolute;
    left: 165%;
    margin-top: -9px;
    &.pick-b {
      color: @green;

      &:hover {
        color: lighten(@green, 15%);
        cursor: pointer;
      }
    }
    &.pick-a {
      color: @red;
      margin-left: -20px;
    }
  }

  .hidden {
    background-color: blue;
  }

  .expr-actions {

    .flag {
      display: none;
    }
  }
  .nested-flag {

    left: 100%;
    position: absolute;
    width: 100%;

    &.flag-left {
      margin-top: -50px;
    }
    &.flag-right {
      margin-top: 50px;
    }
  }

}

// ---------------------------
// Z-Index
// ---------------------------
// [spec](https://trello.com/c/EDCiXGjq/732-z-indexing-part-2)
// - buttons => 70
// - entry box => 60
// - routing table => 55
// - dragging node => 50
// - selected node => 40
// - unselected node => 20

#buttons {
  z-index: 70;
}

.error-panel {
  z-index: 60;
}

#sidebar-left {
  z-index: 55;
}

.entry {
  form {
    #search-container {
      #entry-box {
        min-width: 1px;
        z-index: 60;
      }
    }
  }
}

.string-entry {
  #entry-box {
    z-index: 60;
  }
}

.sidebar-box {
  z-index: 20;
  &.dragging {
    z-index: 50;
  }
  &.selected {
    z-index: 40;
  }
}

#debug {
  min-height: 20px;
  z-index: 100;
  position: absolute;
  bottom: 0;
  right: 0;
  max-height: 500px;
  max-width: 500px;
  overflow: scroll;

  nav {
     max-width: 50%;

    .history {
      span {
        &.details {
          width: 25px;
        }

        &.message {
          width: calc(~"100% - 75px");
        }

        &.index {
          width: 30px;
          clear: both;
        }
      }
    }
  }
}
