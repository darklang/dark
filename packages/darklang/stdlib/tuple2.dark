module Darklang =
  module Stdlib =
    module Tuple2 =
      /// Returns a pair with the given values
      let create (first: 'a) (second: 'b) : 'a * 'b = (first, second)


      /// Returns the first value of a pair
      let first (tuple: 'a * 'b) : 'a =
        let (first, _) = tuple
        first


      /// Returns the second value of a pair
      let second (tuple: 'a * 'b) : 'b =
        let (_, second) = tuple
        second


      /// Returns a pair with the elements swapped
      let swap (tuple: 'a * 'b) : 'b * 'a =
        let (first, second) = tuple
        (second, first)


      /// Transform the first value in a pair
      let mapFirst (fn: 'a -> 'c) (tuple: 'a * 'b) : 'c * 'b =
        let (first, second) = tuple
        (fn first, second)


      /// Transform the second value in a pair
      let mapSecond (fn: 'b -> 'c) (tuple: 'a * 'b) : 'a * 'c =
        let (first, second) = tuple
        (first, fn second)


      /// Transform both values in a pair
      let mapBoth
        (fnFirst: 'a -> 'c)
        (fnSecond: 'b -> 'd)
        (tuple: 'a * 'b)
        : 'c * 'd =
        let (first, second) = tuple
        (fnFirst first, fnSecond second)