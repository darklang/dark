/// For interacting with the "dark matter",
/// where package items (types, values, fns, etc) are maintained.
/// i.e. the packages + manager
///
/// Of note, this is the Dev-time PackageManager, not the Runtime PackageManager.
module Darklang.LanguageTools.PackageManager


module Type =
  let find (typeName: String) : Stdlib.Option.Option<Hash> =
    Builtin.packageManagerFindType typeName

  let get
    (hash: Hash)
    : Stdlib.Option.Option<ProgramTypes.PackageType.PackageType> =
    Builtin.packageManagerGetType hash


module Value =
  let find (name: String) : Stdlib.Option.Option<Hash> =
    Builtin.packageManagerFindValue name

  let get
    (hash: Hash)
    : Stdlib.Option.Option<ProgramTypes.PackageValue.PackageValue> =
    Builtin.packageManagerGetValue hash


module Function =
  let find (name: String) : Stdlib.Option.Option<Hash> =
    Builtin.packageManagerFindFn name

  let get (hash: Hash) : Stdlib.Option.Option<ProgramTypes.PackageFn.PackageFn> =
    Builtin.packageManagerGetFn hash


module Search =
  let search (query: ProgramTypes.Search.SearchQuery) : ProgramTypes.Search.SearchResults =
    let searchResults =
      Builtin.packageManagerSearch query

    ProgramTypes.Search.SearchResults
      { submodules = [searchResults.submodules]
        types = searchResults.types
        values = searchResults.values
        fns = searchResults.fns }

// CLEANUP: update this to a value rather than a function, once we have support for value records
let pm () : ProgramTypes.PackageManager.PackageManager =
  ProgramTypes.PackageManager.PackageManager
    { findType = PackageManager.Type.find
      findValue = PackageManager.Value.find
      findFn = PackageManager.Function.find
      getFn = PackageManager.Function.get
      getValue = PackageManager.Value.get
      getType = PackageManager.Type.get
      search = fun query -> PackageManager.Search.search query }