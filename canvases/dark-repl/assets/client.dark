let log (s: String) : Unit =
  let _ = WASM.Editor.callJSFunction "console.log" [ s ]
  ()

let rUnwrap (result: PACKAGE.Darklang.Stdlib.Result.Result<'a, 'b>) : 'a =
  match result with
  | Ok s -> s
  | Error e -> e // TODO: this won't work if non-string

let parseAndSerializeProgram (userProgram: String) : String =
  let response =
    Builtin.HttpClient.request
      "POST"
      "http://dark-repl.dlio.localhost:11003/get-program-json"
      []
      (Builtin.String.toBytes userProgram)

  response |> rUnwrap |> (fun r -> r.body) |> Builtin.String.fromBytes

let handleEvent
  (userProgramSource: String)
  : PACKAGE.Darklang.Stdlib.Result.Result<Unit, String> =
  let parsedAndSerialized = parseAndSerializeProgram userProgramSource
  let evalResult = (WASM.Editor.evalUserProgram parsedAndSerialized) |> rUnwrap
  WASM.Editor.callJSFunction "self.receiveEvalResult" [ evalResult ]