[expected-request]
GET PATH HTTP/1.1
Accept: */*
Accept-Encoding: deflate, gzip, br
Authorization: Basic: bWU6b3BlbnNlc2FtZQ==
Content-Type: text/plain; charset=utf-8
Host: HOST

[response]
HTTP/1.1 308 Permanent Redirect
Date: xxx, xx xxx xxxx xx:xx:xx xxx
Location: /v0/response-redirect-dest-with-auth-header



[test]
(let reqHeaders = { Authorization = "Basic: bWU6b3BlbnNlc2FtZQ==" }
 let response = (HttpClient.request "get" "http://URL" {} reqHeaders) |> unwrap
 let respHeaders = response.headers |> List.filter (fun h -> Tuple2.first h != "date")
 {response with headers = respHeaders}) =
   HttpClient.Response
    { body = "Redirect destination reached with auth"
      statusCode = 200
      headers =
        [
          "Arbitrary-header" = "Test value"
          "Content-Length" = "38"
          ("content-type", "text/plain; charset=utf-8")
          "HTTP/1.1 308 Permanent Redirect" = ""
          Location = "/v0/response-redirect-dest-with-auth-header"
          ("server", "kestrel")
          "Transfer-Encoding" = "chunked"
        ]
      raw = "Redirect destination reached with auth"}

