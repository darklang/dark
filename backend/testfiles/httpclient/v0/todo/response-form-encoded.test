[expected-request]
GET PATH HTTP/1.1
Accept: */*
Accept-Encoding: deflate, gzip, br
Content-Type: application/x-www-form-urlencoded
Host: HOST


[response]
HTTP/1.1 200 OK
Date: xxx, xx xxx xxxx xx:xx:xx xxx
Content-type: application/x-www-form-urlencoded; charset=utf-8
Content-Length: LENGTH

var1=2&var2=[]

[test]
(let reqHeaders = { "Content-type" = "application/x-www-form-urlencoded" }
 let response = (PACKAGE.Darklang.Stdlib.HttpClient.request "get" "http://URL" {} reqHeaders) |> Builtin.unwrap
 let respHeaders = response.headers |> PACKAGE.Darklang.Stdlib.List.filter (fun h -> PACKAGE.Darklang.Stdlib.Tuple2.first h != "date")
{response with headers = respHeaders}) =
   Builtin.HttpClient.Response
    { body = "var1=2&var2=[]"
      statusCode = 200
      headers =
        [
          ("content-length", "LENGTH")
          "Content-Type" = "application/x-www-form-urlencoded; charset=utf-8"
          ("server", "kestrel")
        ]
      raw = "var1=2&var2=[]"}
