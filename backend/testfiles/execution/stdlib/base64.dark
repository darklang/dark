// TODO: try decoding values with incorrect padding

(Stdlib.Base64.decode "white space")
== Stdlib.Result.Result.Error("Not a valid base64 string")

(Stdlib.Base64.decode "Kw") == Stdlib.Result.Result.Ok(Stdlib.String.toBytes "+")

(Stdlib.Base64.decode "yLo") == Stdlib.Result.Result.Ok(Stdlib.String.toBytes "Ⱥ")

(Stdlib.Base64.decode "xbzDs8WCdw")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "żółw")

(Stdlib.Base64.decode "LyotKygmQDk4NTIx")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "/*-+(&@98521")

(Stdlib.Base64.decode "illegal-chars&@:")
== Stdlib.Result.Result.Error("Not a valid base64 string")

(Stdlib.Base64.decode "x")
== Stdlib.Result.Result.Error("Not a valid base64 string")
// empty case
(Stdlib.Base64.decode "") == Stdlib.Result.Result.Ok(Stdlib.String.toBytes "")
// Test cases from the spec with padding added
(Stdlib.Base64.decode "Zg") == Stdlib.Result.Result.Ok(Stdlib.String.toBytes "f")

(Stdlib.Base64.decode "Zg==")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "f")

(Stdlib.Base64.decode "Zm8")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "fo")

(Stdlib.Base64.decode "Zm8=")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "fo")

(Stdlib.Base64.decode "Zm9v")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foo")

(Stdlib.Base64.decode "Zm9vYg")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foob")

(Stdlib.Base64.decode "Zm9vYg==")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foob")

(Stdlib.Base64.decode "Zm9vYmE")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "fooba")

(Stdlib.Base64.decode "Zm9vYmE=")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "fooba")

(Stdlib.Base64.decode "Zm9vYmFy")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foobar")
// "Impossible cases" from apache
// https://commons.apache.org/proper/commons-codec/xref-test/org/apache/commons/codec/binary/Base64Test.html
(Stdlib.Base64.decode "ZE==")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "d")

(Stdlib.Base64.decode "ZmC=")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "f`")

(Stdlib.Base64.decode "Zm9vYE==")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foo`")

(Stdlib.Base64.decode "Zm9vYmC=")
== Stdlib.Result.Result.Ok(Stdlib.String.toBytes "foob`")

(Stdlib.Base64.decode
  "ZnJvbT0wNi8wNy8yMDEzIHF1ZXJ5PSLOms6xzrvPjs-CIM6_z4HOr8-DzrHPhM61Ig")
== PACKAGE.Darklang.Stdlib.Result.Result.Ok(
  Stdlib.String.toBytes "from=06/07/2013 query=\"Καλώς ορίσατε\""
)

S(tdlib.Base64.decode "8J-RsfCfkbHwn4-78J-RsfCfj7zwn5Gx8J-PvfCfkbHwn4--8J-RsfCfj78")
== PACKAGE.Darklang.Stdlib.Result.Result.Ok(
  Stdlib.String.toBytes "👱👱🏻👱🏼👱🏽👱🏾👱🏿"
)
// These produce strings of bytes which are technically legal it seems
(Stdlib.Base64.decode "-p") == Stdlib.Result.Result.Ok([ 250uy ])

(Stdlib.Base64.decode "lI") == Stdlib.Result.Result.Ok([ 148uy ])

(Stdlib.Base64.decode "5Sk") == Stdlib.Result.Result.Ok([ 229uy; 41uy ])

(Stdlib.Base64.decode "AA") == Stdlib.Result.Result.Ok([ 0uy ])

(Stdlib.Base64.decode "_w") == Stdlib.Result.Result.Ok([ 255uy ])


(Stdlib.Base64.encode (Stdlib.String.toBytes "abcdef")) == "YWJjZGVm"

(Stdlib.Base64.encode (Stdlib.String.toBytes "Z̤͔ͧ̑̓ä͖̭̈̇lͮ̒ͫǧ̗͚̚o̙̔ͮ̇͐̇"))
== "WsykzZTNp8yRzJPDpM2WzK3MiMyHbM2uzJLNq8enzJfNmsyab8yZzJTNrsyHzZDMhw=="

(Stdlib.Base64.encode (Stdlib.String.toBytes "اختبار النص"))
== "2KfYrtiq2KjYp9ixINin2YTZhti1"

(Stdlib.Base64.encode (Stdlib.String.toBytes "﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽"))
== "77e977e977e977e977e977e977e977e977e977e977e977e977e977e977e977e9"

(Stdlib.Base64.encode (Stdlib.String.toBytes "👱👱🏻👱🏼👱🏽👱🏾👱🏿"))
== "8J+RsfCfkbHwn4+78J+RsfCfj7zwn5Gx8J+PvfCfkbHwn4++8J+RsfCfj78="

(Stdlib.Base64.encode (Stdlib.String.toBytes "👨‍❤️‍💋‍👨👩‍👩‍👧‍👦🏳️‍⚧️🇵🇷"))
== "8J+RqOKAjeKdpO+4j+KAjfCfkovigI3wn5Go8J+RqeKAjfCfkanigI3wn5Gn4oCN8J+RpvCfj7PvuI/igI3imqfvuI/wn4e18J+Htw=="


(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "abcdef")) == "YWJjZGVm"

(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "Z̤͔ͧ̑̓ä͖̭̈̇lͮ̒ͫǧ̗͚̚o̙̔ͮ̇͐̇"))
== "WsykzZTNp8yRzJPDpM2WzK3MiMyHbM2uzJLNq8enzJfNmsyab8yZzJTNrsyHzZDMhw=="

(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "اختبار النص"))
== "2KfYrtiq2KjYp9ixINin2YTZhti1"

(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽﷽"))
== "77e977e977e977e977e977e977e977e977e977e977e977e977e977e977e977e9"

(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "👱👱🏻👱🏼👱🏽👱🏾👱🏿"))
== "8J-RsfCfkbHwn4-78J-RsfCfj7zwn5Gx8J-PvfCfkbHwn4--8J-RsfCfj78="

(Stdlib.Base64.urlEncode (Stdlib.String.toBytes "👨‍❤️‍💋‍👨👩‍👩‍👧‍👦🏳️‍⚧️🇵🇷"))
== "8J-RqOKAjeKdpO-4j-KAjfCfkovigI3wn5Go8J-RqeKAjfCfkanigI3wn5Gn4oCN8J-RpvCfj7PvuI_igI3imqfvuI_wn4e18J-Htw=="