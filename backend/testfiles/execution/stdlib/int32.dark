Stdlib.Int32.absoluteValue -5l == 5l
Stdlib.Int32.absoluteValue 5l == 5l

Stdlib.Int32.max 5l 6l == 6l
Stdlib.Int32.max 10l 1l == 10l
Stdlib.Int32.max -5l 6l == 6l
Stdlib.Int32.max -100l -20000l == -100l
Stdlib.Int32.max 250l -26l == 250l

Stdlib.Int32.min 5l 6l == 5l
Stdlib.Int32.min 50l -10l == -10l
Stdlib.Int32.min -5l 6l == -5l
Stdlib.Int32.min -100l -20000l == -20000l
Stdlib.Int32.min 250l -26l == -26l


Stdlib.Int32.clamp -5l -2l 5l == -2l // in bounds
Stdlib.Int32.clamp -3l -2l 1l == -2l // below min
Stdlib.Int32.clamp -5l 1l 1l == 1l // at limit
Stdlib.Int32.clamp 1l 2l 1l == 1l // above max
Stdlib.Int32.clamp 3l 0l 2l == 2l //  below in
Stdlib.Int32.clamp -100l 0l 0l == 0l
Stdlib.Int32.clamp 100l 0l 0l == 0l
Stdlib.Int32.clamp -100l 0l -1l == -1l
Stdlib.Int32.clamp 100l 0l -1l == 0l
Stdlib.Int32.clamp -100l -1l 0l == -1l
Stdlib.Int32.clamp 100l -1l 0l == 0l
Stdlib.Int32.clamp -100l 1l 0l == 0l
Stdlib.Int32.clamp 100l 1l 0l == 1l
Stdlib.Int32.clamp -2147483647l 250l -26l == -26l
Stdlib.Int32.clamp 2147483647l 250l -26l == 250l

Stdlib.Int32.negate -5l == 5l
Stdlib.Int32.negate 5l == -5l
Stdlib.Int32.negate 0l == 0l
Stdlib.Int32.negate -0l == 0l

Stdlib.Int32.remainder 15l 6l == Stdlib.Result.Result.Ok(3l)

Stdlib.Int32.remainder 20l 8l == Stdlib.Result.Result.Ok(4l)

Stdlib.Int32.remainder -20l 8l == Stdlib.Result.Result.Ok(-4l)

Stdlib.Int32.remainder -20l -8l == Stdlib.Result.Result.Ok(-4l)

Stdlib.Int32.remainder -15l 6l == Stdlib.Result.Result.Ok(-3l)

Stdlib.Int32.remainder 5l 0l == Builtin.testDerrorMessage "Division by zero"


Stdlib.Int32.mod 15l 5l == 0l
Stdlib.Int32.mod 15l 6l == 3l
Stdlib.Int32.mod 0l 15l == 0l
Stdlib.Int32.mod -1l 2l == 1l
Stdlib.Int32.mod -754l 53l == 41l
Stdlib.Int32.mod 222222222l 3l == 0l

Stdlib.Int32.mod 5l 0l == Builtin.testDerrorMessage "Zero modulus"

Stdlib.Int32.mod 5l -5l == Builtin.testDerrorMessage "Negative modulus"

Stdlib.Int32.power 2l 3l == 8l
Stdlib.Int32.power 0l 1l == 0l
Stdlib.Int32.power 1l 0l == 1l
Stdlib.Int32.power 0l 0l == 1l
Stdlib.Int32.power -2l 5l == -32l
Stdlib.Int32.power -1l 5l == -1l
Stdlib.Int32.power -1l 6l == 1l
Stdlib.Int32.power 1l 2147483647l == 1l

Stdlib.Int32.power 2l 31l == Builtin.testDerrorMessage "Out of range"

Stdlib.Int32.power 120l 20l == Builtin.testDerrorMessage "Out of range"

Stdlib.Int32.power 2l -3l == Builtin.testDerrorMessage "Negative exponent"


Stdlib.Int32.greaterThan 20l 1l == true

Stdlib.Int32.greaterThanOrEqualTo 0l 1l == false
Stdlib.Int32.greaterThanOrEqualTo 1l 0l == true
Stdlib.Int32.greaterThanOrEqualTo 6l 1l == true
Stdlib.Int32.greaterThanOrEqualTo 6l 8l == false
Stdlib.Int32.greaterThanOrEqualTo -5l -20l == true
Stdlib.Int32.greaterThanOrEqualTo -20l -1l == false
Stdlib.Int32.greaterThanOrEqualTo -20l -20l == true


Stdlib.Int32.lessThanOrEqualTo 6l 8l == true
Stdlib.Int32.lessThanOrEqualTo 10l 1l == false
Stdlib.Int32.lessThanOrEqualTo 0l 1l == true
Stdlib.Int32.lessThanOrEqualTo 1l 0l == false
Stdlib.Int32.lessThanOrEqualTo -100l 22544l == true
Stdlib.Int32.lessThanOrEqualTo -999l -9999l == false
Stdlib.Int32.lessThanOrEqualTo -8888l -8888l == true

Stdlib.Int32.lessThan 6l 8l == true
Stdlib.Int32.lessThan 10l 1l == false
Stdlib.Int32.lessThan 0l 1l == true
Stdlib.Int32.lessThan 1l 0l == false
Stdlib.Int32.lessThan -100l 22544l == true
Stdlib.Int32.lessThan -999l -9999l == false
Stdlib.Int32.lessThan -8888l -8888l == false

Stdlib.Int32.sqrt 4l == 2.0
Stdlib.Int32.sqrt 100l == 10.0
Stdlib.Int32.sqrt 86l == 9.273618495495704

Stdlib.Int32.toFloat 2l == 2.0
Stdlib.Int32.toFloat 955656l == 955656.0
Stdlib.Int32.toFloat -10l == -10.0

Stdlib.Int32.add 10l 9l == 19l
Stdlib.Int32.add 88l 9l == 97l
Stdlib.Int32.add -1l 2l == 1l
Stdlib.Int32.add 1l 0l == 1l
Stdlib.Int32.add -55l 55l == 0l
Stdlib.Int32.add 2147483646l 1l == 2147483647l

// Overflow tests
Stdlib.Int32.add 2147483647l 1l == -2147483648l
Stdlib.Int32.add 55l 2147483647l == -2147483594l
Stdlib.Int32.add -2147483648l -1l == 2147483647l


Stdlib.Int32.subtract 10l 9l == 1l
Stdlib.Int32.subtract 88l 9l == 79l
Stdlib.Int32.subtract 0l 1l == -1l
Stdlib.Int32.subtract 1l 0l == 1l
Stdlib.Int32.subtract -55l -55l == 0l


Stdlib.Int32.multiply 8l 8l == 64l
Stdlib.Int32.multiply 5145l 5145l == 26471025l

Stdlib.Int32.divide 10l 5l == 2l
Stdlib.Int32.divide 17l 3l == 5l
Stdlib.Int32.divide -8l 5l == -1l
Stdlib.Int32.divide 0l 1l == 0l

Stdlib.Int32.divide 1l 0l == Builtin.testDerrorMessage "Division by zero"

(Stdlib.List.range 1L 5L)
|> Stdlib.List.map (fun x -> Stdlib.Int32.random 1l 2l)
|> Stdlib.List.map (fun x ->
  (Stdlib.Int32.greaterThanOrEqualTo x 1l)
  && (Stdlib.Int32.lessThanOrEqualTo x 2l)) == [ true; true; true; true; true ]

(Stdlib.List.range 1L 5L)
|> Stdlib.List.map (fun x -> Stdlib.Int32.random 10l 20l)
|> Stdlib.List.map (fun x ->
  (Stdlib.Int32.greaterThanOrEqualTo x 10l)
  && (Stdlib.Int32.lessThanOrEqualTo x 20l)) == [ true; true; true; true; true ]

(Stdlib.List.range 1L 5L)
|> Stdlib.List.map (fun x -> Stdlib.Int32.random 2l 1l)
|> Stdlib.List.map (fun x ->
  (Stdlib.Int32.greaterThanOrEqualTo x 1l)
  && (Stdlib.Int32.lessThanOrEqualTo x 2l)) == [ true; true; true; true; true ]

(Stdlib.List.range 1L 5L)
|> Stdlib.List.map (fun x -> Stdlib.Int32.random 20l 10l)
|> Stdlib.List.map (fun x ->
  (Stdlib.Int32.greaterThanOrEqualTo x 10l)
  && (Stdlib.Int32.lessThanOrEqualTo x 20l)) == [ true; true; true; true; true ]

((Stdlib.List.range 1L 100L)
 |> Stdlib.List.map (fun x -> Stdlib.Int32.random 0l 1l)
 |> Stdlib.List.unique) == [ 0l; 1l ]


((Stdlib.List.range 1L 100L)
 |> Stdlib.List.map (fun x -> Stdlib.Int32.random 0l 2l)
 |> Stdlib.List.unique) == [ 0l; 1l; 2l ]


Stdlib.Int32.sum [ 1l; 2l ] == 3l

Stdlib.Int32.parse "0" == Stdlib.Result.Result.Ok(0l)

Stdlib.Int32.parse "1" == Stdlib.Result.Result.Ok(1l)

Stdlib.Int32.parse " 1" == Stdlib.Result.Result.Ok(1l)

Stdlib.Int32.parse "1 " == Stdlib.Result.Result.Ok(1l)

Stdlib.Int32.parse "+1" == Stdlib.Result.Result.Ok(1l)

Stdlib.Int32.parse " +1 " == Stdlib.Result.Result.Ok(1l)

Stdlib.Int32.parse "-1" == Stdlib.Result.Result.Ok(-1l)

Stdlib.Int32.parse "078" == Stdlib.Result.Result.Ok(78l) // "octal" format ignored

Stdlib.Int32.parse "-00001" == Stdlib.Result.Result.Ok(-1l)

Stdlib.Int32.parse "-10001" == Stdlib.Result.Result.Ok(-10001l)

Stdlib.Int32.parse "-2147483648" == Stdlib.Result.Result.Ok(-2147483648l)

Stdlib.Int32.parse "2147483647" == Stdlib.Result.Result.Ok(2147483647l)

Stdlib.Int32.parse "2147483648" == Stdlib.Result.Result.Error(Stdlib.Int32.ParseError.OutOfRange())

Stdlib.Int32.parse "-2147483649" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.OutOfRange())

Stdlib.Int32.parse "1 2 3" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "+ 1" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "- 1" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "0xA" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "0x123" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "0b0100" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "pi" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "PACKAGE.Darklang.Stdlib.Math.pi" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "1.23E+04" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "1I" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "one" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())

Stdlib.Int32.parse "XIV" == Stdlib.Result.Result.Error(
  Stdlib.Int32.ParseError.BadFormat())


Stdlib.Int32.toString 0l == "0"
Stdlib.Int32.toString 1l == "1"
Stdlib.Int32.toString -1l == "-1"
Stdlib.Int32.toString -2147483648l == "-2147483648" // Int32 lower limit
Stdlib.Int32.toString 2147483647l == "2147483647" // Int32 upper limit

Stdlib.Int32.fromInt8 0y == 0l

Stdlib.Int32.fromInt8 1y == 1l

Stdlib.Int32.fromInt8 127y == 127l

Stdlib.Int32.fromInt8 (-128y) == -128l

Stdlib.Int32.fromUInt8 0uy == 0l

Stdlib.Int32.fromUInt8 1uy == 1l

Stdlib.Int32.fromUInt8 255uy == 255l

Stdlib.Int32.fromInt16 0s == 0l

Stdlib.Int32.fromInt16 1s == 1l

Stdlib.Int32.fromInt16 32767s == 32767l

Stdlib.Int32.fromInt16 (-32768s) == -32768l

Stdlib.Int32.fromUInt16 0us == 0l

Stdlib.Int32.fromUInt16 1us == 1l

Stdlib.Int32.fromUInt16 65535us == 65535l

Stdlib.Int32.fromUInt32 0ul == Stdlib.Option.Option.Some(0l)

Stdlib.Int32.fromUInt32 1ul == Stdlib.Option.Option.Some(1l)

Stdlib.Int32.fromUInt32 4294967295ul == Stdlib.Option.Option.None()

Stdlib.Int32.fromInt64 0L == Stdlib.Option.Option.Some(0l)

Stdlib.Int32.fromInt64 1L == Stdlib.Option.Option.Some(1l)

Stdlib.Int32.fromInt64 2147483647L == Stdlib.Option.Option.Some(2147483647l)

Stdlib.Int32.fromInt64 2147483648L == Stdlib.Option.Option.None()

Stdlib.Int32.fromInt64 (-1L) == Stdlib.Option.Option.Some(-1l)

Stdlib.Int32.fromInt64 (-2147483648L) == Stdlib.Option.Option.Some(-2147483648l)

Stdlib.Int32.fromInt64 (-2147483649L) == Stdlib.Option.Option.None()

Stdlib.Int32.fromUInt64 0UL == Stdlib.Option.Option.Some(0l)

Stdlib.Int32.fromUInt64 1UL == Stdlib.Option.Option.Some(1l)

Stdlib.Int32.fromUInt64 2147483647UL == Stdlib.Option.Option.Some(2147483647l)

Stdlib.Int32.fromUInt64 2147483648UL == Stdlib.Option.Option.None()

Stdlib.Int32.fromInt128 0Q == Stdlib.Option.Option.Some(0l)

Stdlib.Int32.fromInt128 1Q == Stdlib.Option.Option.Some(1l)

Stdlib.Int32.fromInt128 2147483647Q == Stdlib.Option.Option.Some(2147483647l)

Stdlib.Int32.fromInt128 2147483648Q == Stdlib.Option.Option.None()

Stdlib.Int32.fromInt128 (-1Q) == Stdlib.Option.Option.Some(-1l)

Stdlib.Int32.fromInt128 (-2147483648Q) == Stdlib.Option.Option.Some(-2147483648l)

Stdlib.Int32.fromInt128 (-2147483649Q) == Stdlib.Option.Option.None()

Stdlib.Int32.fromUInt128 0Z == Stdlib.Option.Option.Some(0l)

Stdlib.Int32.fromUInt128 1Z == Stdlib.Option.Option.Some(1l)

Stdlib.Int32.fromUInt128 2147483647Z == Stdlib.Option.Option.Some(2147483647l)

Stdlib.Int32.fromUInt128 2147483648Z == Stdlib.Option.Option.None()