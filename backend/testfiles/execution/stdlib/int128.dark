Stdlib.Int128.absoluteValue -5Q == 5Q
Stdlib.Int128.absoluteValue 5Q == 5Q

Stdlib.Int128.absoluteValue -170141183460469231731687303715884105728Q == Builtin.testDerrorMessage
  "Out of range"

Stdlib.Int128.max 5Q 6Q == 6Q
Stdlib.Int128.max 10Q 1Q == 10Q
Stdlib.Int128.max -5Q 6Q == 6Q

Stdlib.Int128.max
  170141183460469231731687303715884105727Q
  -170141183460469231731687303715884105728Q == 170141183460469231731687303715884105727Q

Stdlib.Int128.min 5Q 6Q == 5Q
Stdlib.Int128.min 50Q -10Q == -10Q
Stdlib.Int128.min -5Q 6Q == -5Q

Stdlib.Int128.min
  170141183460469231731687303715884105727Q
  -170141183460469231731687303715884105728Q == -170141183460469231731687303715884105728Q


Stdlib.Int128.clamp -5Q -2Q 5Q == -2Q
Stdlib.Int128.clamp -3Q -2Q 1Q == -2Q
Stdlib.Int128.clamp -5Q 1Q 1Q == 1Q
Stdlib.Int128.clamp 1Q 2Q 1Q == 1Q
Stdlib.Int128.clamp 3Q 0Q 2Q == 2Q
Stdlib.Int128.clamp -100Q 0Q 0Q == 0Q
Stdlib.Int128.clamp 100Q 0Q 0Q == 0Q
Stdlib.Int128.clamp -100Q 0Q -1Q == -1Q
Stdlib.Int128.clamp 100Q 0Q -1Q == 0Q
Stdlib.Int128.clamp -100Q -1Q 0Q == -1Q
Stdlib.Int128.clamp -100Q 1Q 0Q == 0Q
Stdlib.Int128.clamp 100Q 1Q 0Q == 1Q

Stdlib.Int128.negate -5Q == 5Q
Stdlib.Int128.negate 5Q == -5Q
Stdlib.Int128.negate 0Q == 0Q
Stdlib.Int128.negate -0Q == 0Q

Stdlib.Int128.negate -170141183460469231731687303715884105728Q == Builtin.testDerrorMessage
  "Out of range"

Stdlib.Int128.remainder 15Q 6Q == Stdlib.Result.Result.Ok(3Q)

Stdlib.Int128.remainder 20Q 8Q == Stdlib.Result.Result.Ok(4Q)

Stdlib.Int128.remainder -20Q 8Q == Stdlib.Result.Result.Ok(-4Q)

Stdlib.Int128.remainder -20Q -8Q == Stdlib.Result.Result.Ok(-4Q)

Stdlib.Int128.remainder -15Q 6Q == Stdlib.Result.Result.Ok(-3Q)

Stdlib.Int128.remainder 5Q 0Q == Builtin.testDerrorMessage "Division by zero"

Stdlib.Int128.add 10Q 9Q == 19Q
Stdlib.Int128.add 88Q 9Q == 97Q
Stdlib.Int128.add -1Q 2Q == 1Q
Stdlib.Int128.add 1Q 0Q == 1Q
Stdlib.Int128.add -55Q 55Q == 0Q
Stdlib.Int128.add 55Q 55Q == 110Q
Stdlib.Int128.add 9223372036854775807Q 2Q == 9223372036854775809Q

Stdlib.Int128.add 170141183460469231731687303715884105726Q 4Q == Builtin.testDerrorMessage
  "Out of range"



Stdlib.Int128.subtract 10Q 9Q == 1Q
Stdlib.Int128.subtract 88Q 9Q == 79Q
Stdlib.Int128.subtract 0Q 1Q == -1Q
Stdlib.Int128.subtract 1Q 0Q == 1Q
Stdlib.Int128.subtract -55Q -55Q == 0Q

Stdlib.Int128.subtract -55Q 170141183460469231731687303715884105726Q == Builtin.testDerrorMessage
  "Out of range"

Stdlib.Int128.multiply 8Q 8Q == 64Q
Stdlib.Int128.multiply 1Q 0Q == 0Q

Stdlib.Int128.divide 10Q 5Q == 2Q
Stdlib.Int128.divide 17Q 3Q == 5Q
Stdlib.Int128.divide -8Q 5Q == -1Q
Stdlib.Int128.divide 0Q 1Q == 0Q

Stdlib.Int128.divide 1Q 0Q == Builtin.testDerrorMessage "Division by zero"

Stdlib.Int128.divide -170141183460469231731687303715884105728Q -1Q == Builtin.testDerrorMessage
  "Out of range"


Stdlib.Int128.greaterThan 20Q 1Q == true

Stdlib.Int128.greaterThan 20Q 170141183460469231731687303715884105727Q == false

Stdlib.Int128.greaterThanOrEqualTo 0Q 1Q == false
Stdlib.Int128.greaterThanOrEqualTo 1Q 0Q == true
Stdlib.Int128.greaterThanOrEqualTo 6Q 1Q == true
Stdlib.Int128.greaterThanOrEqualTo 6Q 8Q == false
Stdlib.Int128.greaterThanOrEqualTo -5Q -20Q == true
Stdlib.Int128.greaterThanOrEqualTo -20Q -1Q == false
Stdlib.Int128.greaterThanOrEqualTo -20Q -20Q == true

Stdlib.Int128.greaterThanOrEqualTo -170141183460469231731687303715884105728Q -20Q == false

Stdlib.Int128.lessThanOrEqualTo 6Q 8Q == true
Stdlib.Int128.lessThanOrEqualTo 10Q 1Q == false
Stdlib.Int128.lessThanOrEqualTo 0Q 1Q == true
Stdlib.Int128.lessThanOrEqualTo 1Q 0Q == false

Stdlib.Int128.lessThan
  -170141183460469231731687303715884105728Q
  170141183460469231731687303715884105727Q == true

Stdlib.Int128.lessThan 6Q 8Q == true
Stdlib.Int128.lessThan 10Q 1Q == false
Stdlib.Int128.lessThan 0Q 1Q == true
Stdlib.Int128.lessThan 1Q 0Q == false

Stdlib.Int128.lessThan
  -170141183460469231731687303715884105728Q
  170141183460469231731687303715884105727Q == true

Stdlib.Int128.toString 0Q == "0"
Stdlib.Int128.toString 1Q == "1"
Stdlib.Int128.toString -1Q == "-1"
Stdlib.Int128.toString -170141183460469231731687303715884105728Q == "-170141183460469231731687303715884105728"
Stdlib.Int128.toString 170141183460469231731687303715884105727Q == "170141183460469231731687303715884105727"

Stdlib.Int128.toFloat 2Q == 2.0
Stdlib.Int128.toFloat 170141183460469231731687303715884105727Q == 170141183460469231731687303715884105727.0
Stdlib.Int128.toFloat -170141183460469231731687303715884105728Q == -170141183460469231731687303715884105728.0
Stdlib.Int128.toFloat -10Q == -10.0

Stdlib.Int128.sqrt 4Q == 2.0
Stdlib.Int128.sqrt 100Q == 10.0
Stdlib.Int128.sqrt 86Q == 9.273618495495704

Stdlib.Int128.mod 15Q 5Q == 0Q
Stdlib.Int128.mod 15Q 6Q == 3Q
Stdlib.Int128.mod 0Q 15Q == 0Q
Stdlib.Int128.mod -1Q 2Q == 1Q
Stdlib.Int128.mod -128Q 53Q == 31Q
Stdlib.Int128.mod 127Q 3Q == 1Q

Stdlib.Int128.mod 5Q 0Q == Builtin.testDerrorMessage "Zero modulus"

Stdlib.Int128.mod 5Q -5Q == Builtin.testDerrorMessage "Negative modulus"

Stdlib.Int128.parse "0" == Stdlib.Result.Result.Ok(0Q)

Stdlib.Int128.parse "1" == Stdlib.Result.Result.Ok(1Q)

Stdlib.Int128.parse " 1" == Stdlib.Result.Result.Ok(1Q)

Stdlib.Int128.parse "1 " == Stdlib.Result.Result.Ok(1Q)

Stdlib.Int128.parse "+1" == Stdlib.Result.Result.Ok(1Q)

Stdlib.Int128.parse " +1 " == Stdlib.Result.Result.Ok(1Q)

Stdlib.Int128.parse "-1" == Stdlib.Result.Result.Ok(-1Q)

Stdlib.Int128.parse "078" == Stdlib.Result.Result.Ok(78Q) // "octal" format ignored

Stdlib.Int128.parse "-00001" == Stdlib.Result.Result.Ok(-1Q)

Stdlib.Int128.parse "170141183460469231731687303715884105727" == Stdlib.Result.Result.Ok(170141183460469231731687303715884105727Q)

Stdlib.Int128.parse "-170141183460469231731687303715884105728" == Stdlib.Result.Result.Ok(-170141183460469231731687303715884105728Q)

Stdlib.Int128.parse "170141183460469231731687303715884105729" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.OutOfRange())

Stdlib.Int128.parse "-170141183460469231731687303715884105729" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.OutOfRange())

Stdlib.Int128.parse "1 2 3" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "+ 1" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "- 1" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "0xA" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "0x123" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "0b0100" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "pi" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "PACKAGE.Darklang.Stdlib.Math.pi" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "1.23E+04" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "1Q" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "one" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())

Stdlib.Int128.parse "XQV" == Stdlib.Result.Result.Error(
  Stdlib.Int128.ParseError.BadFormat())


Stdlib.Int128.fromInt8 0y == 0Q

Stdlib.Int128.fromInt8 1y == 1Q

Stdlib.Int128.fromInt8 127y == 127Q

Stdlib.Int128.fromInt8 -128y == -128Q

Stdlib.Int128.fromUInt8 0uy == 0Q

Stdlib.Int128.fromUInt8 1uy == 1Q

Stdlib.Int128.fromUInt8 255uy == 255Q

Stdlib.Int128.fromInt16 0s == 0Q

Stdlib.Int128.fromInt16 1s == 1Q

Stdlib.Int128.fromInt16 32767s == 32767Q

Stdlib.Int128.fromInt16 -32768s == -32768Q

Stdlib.Int128.fromUInt16 0us == 0Q

Stdlib.Int128.fromUInt16 1us == 1Q

Stdlib.Int128.fromUInt16 65535us == 65535Q

Stdlib.Int128.fromInt32 0l == 0Q

Stdlib.Int128.fromInt32 1l == 1Q

Stdlib.Int128.fromInt32 2147483647l == 2147483647Q

Stdlib.Int128.fromInt32 -2147483648l == -2147483648Q

Stdlib.Int128.fromUInt32 0ul == 0Q

Stdlib.Int128.fromUInt32 1ul == 1Q

Stdlib.Int128.fromUInt32 4294967295ul == 4294967295Q

Stdlib.Int128.fromInt64 0L == 0Q

Stdlib.Int128.fromInt64 1L == 1Q

Stdlib.Int128.fromInt64 9223372036854775807L == 9223372036854775807Q

Stdlib.Int128.fromInt64 -9223372036854775808L == -9223372036854775808Q

Stdlib.Int128.fromUInt64 0UL == 0Q

Stdlib.Int128.fromUInt64 1UL == 1Q

Stdlib.Int128.fromUInt64 18446744073709551615UL == 18446744073709551615Q