// These tests share the same canvas, and if they were run in parallel there would be
// races between them. Therefore they are run using testSequencedGroup in
// LibExecution.Tests.fs.
//
// We have uploaded files to the cloud storage bucket for the dev-environment canvas
// "test-static-assets-deploy". Tests which fetch/serve need to access these files to
// test, and so will all use the same canvas.
//
// However, we also use deploy hashes for many of these tests. Deploy hashes are
// saved to the DB, and the DB for a particular canvas is cleared between tests.
// Since multiple tests use the same canvas, there is a chance that one test will be
// trying to read the deploy hash while another test is deleting the canvas.
//
// That is, if the tests are running in parallel. We've set them to run using
// testSequenceGroup which eliminates the race. This means we can't use the [tests]
// indicator to create groups, as those tests would be run in parallel.

[fn.getPng x:int]
Test.intArrayToBytes [
  137; 80; 78; 71; 13; 10; 26; 10; 0; 0; 0; 13; 73; 72; 68; 82; 0; 0; 0; 32; 0; 0; 0; 32; 8;
  6; 0; 0; 0; 115; 122; 122; 244; 0; 0; 0; 2; 73; 68; 65; 84; 120; 1; 236; 26; 126; 210; 0;
  0; 2; 102; 73; 68; 65; 84; 213; 193; 75; 136; 141; 97; 24; 192; 241; 255; 251; 124; 223; 57;
  99; 18; 178; 152; 144; 18; 197; 89; 160; 212; 132; 52; 136; 164; 228; 155; 115; 140; 36; 11;
  37; 215; 70; 152; 113; 203; 130; 88; 200; 70; 54; 110; 71; 52; 26; 38; 99; 33; 169; 97; 110;
  71; 73; 99; 44; 20; 83; 46; 43; 27; 33; 11; 26; 37; 229; 178; 224; 156; 239; 123; 31; 106;
  70; 103; 102; 247; 30; 189; 37; 191; 31; 255; 154; 161; 2; 59; 86; 236; 173; 41; 149; 146;
  213; 18; 200; 235; 182; 254; 252; 35; 134; 109; 93; 214; 60; 81; 209; 83; 170; 154; 17; 145;
  107; 109; 253; 249; 54; 28; 5; 56; 218; 190; 124; 223; 164; 56; 73; 94; 96; 216; 164; 170;
  219; 106; 167; 47; 250; 250; 226; 221; 192; 99; 126; 155; 55; 109; 193; 85; 96; 51; 48; 93;
  85; 27; 230; 207; 172; 123; 240; 252; 237; 147; 119; 56; 16; 28; 197; 73; 188; 22; 152;
  194; 48; 171; 118; 23; 127; 24; 106; 25; 33; 46; 197; 181; 56; 18; 92; 25; 170; 25; 173;
  154; 97; 198; 152; 110; 202; 126; 166; 210; 169; 123; 56; 10; 241; 32; 48; 193; 17; 75;
  242; 198; 170; 102; 130; 64; 110; 180; 222; 63; 251; 18; 71; 33; 30; 92; 233; 63; 23;
  3; 151; 248; 11; 33; 30; 68; 81; 52; 214; 24; 115; 76; 85; 51; 34; 210; 222; 211; 211;
  211; 137; 35; 193; 143; 243; 170; 122; 24; 88; 103; 173; 237; 104; 104; 104; 88; 136;
  35; 193; 143; 165; 148; 73; 177; 88; 92; 130; 35; 193; 143; 62; 202; 146; 116; 58; 253;
  16; 71; 33; 126; 236; 23; 145; 15; 214; 218; 140; 136; 92; 239; 236; 236; 124; 138; 163;
  16; 15; 10; 133; 194; 15; 224; 4; 127; 33; 196; 131; 221; 251; 11; 227; 226; 56; 57; 174;
  106; 51; 34; 210; 222; 146; 207; 221; 194; 145; 224; 65; 169; 84; 186; 160; 106; 15; 2;
  89; 107; 237; 205; 157; 205; 221; 117; 56; 18; 252; 88; 76; 153; 73; 18; 91; 135; 35;
  193; 15; 97; 4; 99; 84; 112; 36; 184; 27; 100; 180; 65; 60; 16; 28; 141; 9; 170; 58; 140;
  49; 221; 12; 249; 36; 34; 135; 240; 32; 196; 81; 203; 131; 211; 69; 96; 205; 150; 101;
  187; 107; 194; 32; 252; 210; 218; 119; 190; 136; 7; 66; 5; 154; 14; 220; 173; 74; 205;
  93; 53; 55; 152; 179; 114; 42; 158; 8; 142; 26; 155; 186; 198; 255; 44; 22; 159; 1; 125;
  214; 234; 171; 198; 166; 174; 141; 120; 32; 56; 82; 171; 235; 129; 217; 12; 9; 84; 245;
  40; 30; 8; 142; 140; 240; 141; 209; 190; 225; 129; 224; 202; 200; 109; 49; 230; 22; 160;
  192; 160; 49; 114; 16; 15; 66; 28; 93; 206; 231; 98; 96; 67; 99; 83; 215; 132; 48; 37;
  223; 47; 158; 201; 38; 120; 16; 82; 129; 40; 138; 130; 203; 23; 214; 124; 193; 35; 161;
  50; 91; 235; 235; 235; 247; 68; 81; 84; 141; 39; 66; 5; 10; 133; 66; 171; 170; 222; 49;
  198; 156; 204; 102; 179; 51; 40; 83; 70; 49; 138; 35; 161; 2; 185; 92; 110; 50; 176; 3;
  120; 111; 173; 253; 200; 31; 202; 0; 35; 136; 200; 0; 142; 66; 42; 144; 36; 201; 114;
  99; 76; 190; 183; 183; 247; 51; 35; 164; 210; 225; 158; 56; 182; 223; 85; 147; 89; 34;
  65; 123; 75; 62; 247; 144; 255; 197; 47; 29; 238; 219; 222; 92; 167; 151; 81; 0; 0; 0;
  0; 73; 69; 78; 68; 174; 66; 96; 130 ]


// baseUrlFor
[test.baseUrlFor] with ExactCanvasName test-baseurlfor-0
StaticAssets.baseUrlFor_v0 "abcdefghi" = "https://test-baseurlfor-0.darksa.com/gd57quywk2db6zncs3h2hxgfdtc/abcdefghi"


// baseUrlForLatest
[test.baseUrlForLatest_v0] with ExactCanvasName test-baseurlforlatest-0, StaticAssetsDeployHash abcdef1234
StaticAssets.baseUrlForLatest_v0 = "https://test-baseurlforlatest-0.darksa.com/hzfhha2hzep63uscg-venrwndxs/abcdef1234"

[tests.baseUrlForLatest_v0 with no hash]
StaticAssets.baseUrlForLatest_v0 = Test.typeError_v0 "No deploy hash found"

[test.baseUrlForLatest_v1] with ExactCanvasName test-baseurlforlatest-1, StaticAssetsDeployHash abcdef1235
StaticAssets.baseUrlForLatest_v1 = Just "https://test-baseurlforlatest-1.darksa.com/preb3tbz8blanninut_61rbtx-s/abcdef1235"

[tests.baseUrlForLatest_v1with no hash]
StaticAssets.baseUrlForLatest_v1 = Nothing

// urlFor
[test.urlFor] with ExactCanvasName test-urlfor-0
StaticAssets.urlFor_v0 "abcdefghi" "index.html" = "https://test-urlfor-0.darksa.com/3jmuukrzwc2zszlzv_3kxyvd_eo/abcdefghi/index.html"


// urlForLatest
[test.urlForLatest] with ExactCanvasName test-urlforlatest-0, StaticAssetsDeployHash abcdef1234
StaticAssets.urlForLatest_v0 "index.html" = "https://test-urlforlatest-0.darksa.com/bxbyu2t5yencny5j8wus3wszcnc/abcdef1234/index.html"

[tests.urlForLatestWithNoHash]
StaticAssets.urlForLatest_v0 "index.html" = Test.typeError_v0 "No deploy hash found"

// fetch_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetch_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v0 "abcdef1234" "index.html" = Ok "<html><body>Hello world</body></html>\n"

// [test.fetch_v0 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v0 "abcdef1234" "plain.txt" = Ok "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut"

// [test.fetch_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v0 "abcdef1234" "favicon-32x32.png" = Error "Response was not\nUTF-8 safe"

// [test.fetch_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileeshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v0 "abcdef1234" "index.html" = Ok "<html><body>Hello world</body></html>\n"

[test.fetch_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetch_v0 "abcdef1234" "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetch_v0 nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.fetch_v0 "xx" "index.html" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/xx/index.html"


// fetch_v1
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetch_v1 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v1 "abcdef1234" "index.html" = Ok "<html><body>Hello world</body></html>\n"

// [test.fetch_v1 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v1 "abcdef1234" "plain.txt" = Ok "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut"

// [test.fetch_v1 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v1 "abcdef1234" "favicon-32x32.png" = Error "Response was not UTF-8 safe"

// [test.fetch_v1 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileeshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetch_v1 "abcdef1234" "index.html" = Ok "<html><body>Hello world</body></html>\n"

[test.fetch_v1 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetch_v1 "abcdef1234" "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetch nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.fetch_v1 "xx" "index.html" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/xx/index.html"


// fetchLatest_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetchLatest_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v0 "index.html" = Ok "<html><body>Hello world</body></html>\n"

// [test.fetchLatest_v0 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v0 "plain.txt" = Ok "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut"

// [test.fetchLatest_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v0 "favicon-32x32.png" = Error "Response was not\nUTF-8 safe"

// [test.fetchLatest_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileeshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v0 "index.html" = Ok "<html><body>Hello world</body></html>\n"

[test.fetchLatest_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetchLatest_v0 "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetchLatest_v0 nohash]
StaticAssets.fetchLatest_v0 "index.html" = Test.typeError "No deploy hash found"


// fetchLatest_v1
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetchLatest_v1 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v1 "index.html" = Ok "<html><body>Hello world</body></html>\n"

// [test.fetchLatest_v1 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v1 "plain.txt" = Ok "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut"

// [test.fetchLatest_v1 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v1 "favicon-32x32.png" = Error "Response was not\nUTF-8 safe"

// [test.fetchLatest_v1 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatest_v1 "index.html" = Ok "<html><body>Hello world</body></html>\n"

[test.fetchLatest_v1 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetchLatest_v1 "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetchLatest_v1 nohash]
StaticAssets.fetchLatest_v1 "index.html" = Test.typeError "No deploy hash found"


// fetchBytes_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetchBytes_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchBytes_v0 "abcdef1234" "index.html" = Ok (String.toBytes_v0 "<html><body>Hello world</body></html>\n")

// [test.fetchBytes_v0 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchBytes_v0 "abcdef1234" "plain.txt" = Ok (String.toBytes_v0 "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut")

// [test.fetchBytes_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchBytes_v0 "abcdef1234" "favicon-32x32.png" = Ok (getPng 0)

// [test.fetchBytes_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchBytes_v0 "abcdef1234" "index.html" = Ok (String.toBytes_v0 "<html><body>Hello world</body></html>\n")

[test.fetchBytes_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetchBytes_v0 "abcdef1234" "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetchBytes_v0 nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.fetchBytes_v0 "xx" "index.html" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/xx/index.html"


// fetchLatestBytes_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.fetchLatestBytes_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatestBytes_v0 "index.html" = Ok (String.toBytes_v0 "<html><body>Hello world</body></html>\n")

// [test.fetchLatestBytes_v0 text] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatestBytes_v0 "plain.txt" = Ok (String.toBytes_v0 "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\nincididunt ut")

// [test.fetchLatestBytes_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatestBytes_v0 "favicon-32x32.png" = Ok (getPng 0)

// [test.fetchLatestBytes_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// StaticAssets.fetchLatestBytes_v0 "index.html" = Ok (String.toBytes_v0 "<html><body>Hello world</body></html>\n")

[test.fetchLatestBytes_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
StaticAssets.fetchLatestBytes_v0 "no-file-with-this-name" = Test.typeError "Bad HTTP response (404) in call to https://test-static-assets-deploy.darksa.com/u0n38z-mv-t0tkvnwiqyvankw6w/abcdef1234/no-file-with-this-name"

[test.fetchLatestBytes_v0 nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.fetchLatestBytes_v0 "index.html" = Test.typeError "No deploy hash found"



// ----------------------------
// Serve
// ----------------------------

[fn.ocaml200HtmlHeaders _:int]
[
  ["accept-ranges"; "bytes"]
  ["access-control-allow-origin"; "*"]
  ["access-control-expose-headers"; "Content-Type"]
  ["alt-svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""]
  ["cache-control"; "public, max-age=3600"];
  ["content-length"; "38"]
  ["content-type"; "text/html"]
  ["date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["etag"; "\"f48d15085d77f9812a13ba59235bdbf4\""]
  ["expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["last-modified"; "Thu, 07 Apr 2022 22:05:09 GMT"]
  ["server"; "UploadServer"]
  ["x-goog-generation"; "1649369109123964"]
  ["x-goog-hash"; "md5=9I0VCF13+YEqE7pZI1vb9A=="]
  ["x-goog-hash"; "crc32c=64O3OA=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "38"]
  ["x-guploader-uploadid"; "xxx"]
]

[fn.ocaml200PngHeaders _:int]
[
  ["accept-ranges"; "bytes"]
  ["access-control-allow-origin"; "*"]
  ["access-control-expose-headers"; "Content-Type"]
  ["alt-svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""]
  ["cache-control"; "public, max-age=3600"];
  ["content-length"; "685"]
  ["content-type"; "image/png"]
  ["date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["etag"; "\"b19a4b18d1ea73d3297500bcfeb44ae6\""]
  ["expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["last-modified"; "Thu, 07 Apr 2022 21:03:18 GMT"]
  ["server"; "UploadServer"]
  ["x-goog-generation"; "1649365398031129"]
  ["x-goog-hash"; "md5=sZpLGNHqc9MpdQC8/rRK5g=="]
  ["x-goog-hash"; "crc32c=K8nQUQ=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "685"]
  ["x-guploader-uploadid"; "xxx"]
]

[fn.ocaml404Headers _:int]
[
  ["accept-ranges"; "bytes"]
  ["access-control-allow-origin"; "*"]
  ["access-control-expose-headers"; "Content-Type"]
  ["alt-svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\""]
  ["cache-control"; "public, max-age=3600"];
  ["content-length"; "0"]
  ["content-type"; "text/html"]
  ["date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["etag"; "\"d41d8cd98f00b204e9800998ecf8427e\""]
  ["expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["last-modified"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["server"; "UploadServer"]
  ["x-goog-generation"; "1559259346696919"]
  ["x-goog-hash"; "md5=1B2M2Y8AsgTpgAmY7PhCfg=="]
  ["x-goog-hash"; "crc32c=AAAAAA=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "0"]
  ["x-guploader-uploadid"; "xxx"]
]

[fn.fsharp200HtmlHeaders _:int]
[
  ["Accept-Ranges"; "bytes"]
  ["Access-Control-Allow-Origin"; "*"]
  ["Access-Control-Expose-Headers"; "Content-Type"]
  ["Alt-Svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000"]
  ["Cache-Control"; "public, max-age=3600"]
  ["Content-Type"; "text/html"]
  ["Date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["ETag"; "\"f48d15085d77f9812a13ba59235bdbf4\""]
  ["Expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["Last-Modified"; "Thu, 07 Apr 2022 22:05:09 GMT"]
  ["Vary"; "X-Goog-Allowed-Resources"]
  ["X-GUploader-UploadID"; "xxx"]
  ["x-goog-generation"; "1649369109123964"]
  ["x-goog-hash"; "crc32c=64O3OA==,md5=9I0VCF13+YEqE7pZI1vb9A=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "38"]
]

[fn.fsharp200PngHeaders _:int]
[
  ["Accept-Ranges"; "bytes"]
  ["Access-Control-Allow-Origin"; "*"]
  ["Access-Control-Expose-Headers"; "Content-Type"]
  ["Alt-Svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000"]
  ["Cache-Control"; "public, max-age=3600"]
  ["Content-Type"; "image/png"]
  ["Date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["ETag"; "\"b19a4b18d1ea73d3297500bcfeb44ae6\""]
  ["Expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["Last-Modified"; "Thu, 07 Apr 2022 21:03:18 GMT"]
  ["Vary"; "X-Goog-Allowed-Resources"]
  ["X-GUploader-UploadID"; "xxx"]
  ["x-goog-generation"; "1649365398031129"]
  ["x-goog-hash"; "crc32c=K8nQUQ==,md5=sZpLGNHqc9MpdQC8/rRK5g=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "685"]
]


[fn.fsharp404Headers _:int]
[
  ["Accept-Ranges"; "bytes"]
  ["Access-Control-Allow-Origin"; "*"]
  ["Access-Control-Expose-Headers"; "Content-Type"]
  ["Alt-Svc"; "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000"]
  ["Cache-Control"; "public, max-age=3600"]
  ["Content-Type"; "text/html"]
  ["Date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["ETag"; "\"d41d8cd98f00b204e9800998ecf8427e\""]
  ["Expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["Last-Modified"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
  ["Vary"; "X-Goog-Allowed-Resources"]
  ["X-GUploader-UploadID"; "xxx"]
  ["x-goog-generation"; "1559259346696919"]
  ["x-goog-hash"; "crc32c=AAAAAA==,md5=1B2M2Y8AsgTpgAmY7PhCfg=="]
  ["x-goog-metageneration"; "1"]
  ["x-goog-storage-class"; "STANDARD"]
  ["x-goog-stored-content-encoding"; "identity"]
  ["x-goog-stored-content-length"; "0"]
]


[fn.canonicalizeOCamlGoodResponse result:result]
result |> Result.map_v1
  (fun response ->
    let headers =
      (Test.httpResponseHeaders response)
      |> List.filterMap (fun h ->
        match h |> List.head_v0 with
        | "expires" -> Just ["expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "date" -> Just ["date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "age" -> Nothing // sometimes missing from CDN response
        | "x-guploader-uploadid" -> Just ["x-guploader-uploadid"; "xxx"]
        | _ -> Just h)
      |> List.sortBy (fun h -> List.head_v0 h)
    { code = Test.httpResponseStatusCode response; body = Test.httpResponseBody response; headers = headers})

[fn.canonicalizeOCamlBadResponse result:result]
result |> Result.map_v1
  (fun response ->
    let headers =
      (Test.httpResponseHeaders response)
      |> List.filterMap (fun h ->
        match h |> List.head_v0 with
        | "expires" -> Just ["expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "date" -> Just ["date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "last-modified" -> Just ["last-modified"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "age" -> Nothing // sometimes missing from CDN response
        | "x-guploader-uploadid" -> Just ["x-guploader-uploadid"; "xxx"]
        | _ -> Just h)
      |> List.sortBy (fun h -> List.head_v0 h)
    { code = Test.httpResponseStatusCode response; body = Test.httpResponseBody response; headers = headers})

[fn.canonicalizeFSharpGoodResponse result:result]
result |> Result.map_v1
  (fun response ->
    let headers =
      (Test.httpResponseHeaders response)
      |> List.filterMap (fun h ->
        match h |> List.head_v0 with
        | "Expires" -> Just ["Expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "Date" -> Just ["Date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "Age" -> Nothing // sometimes missing from CDN response
        | "X-GUploader-UploadID" -> Just ["X-GUploader-UploadID"; "xxx"]
        | _ -> Just h)
      |> List.sortBy (fun h -> List.head_v0 h)
    { code = Test.httpResponseStatusCode response; body = Test.httpResponseBody response; headers = headers})

[fn.canonicalizeFSharpBadResponse result:result]
result |> Result.map_v1
  (fun response ->
    let headers =
      (Test.httpResponseHeaders response)
      |> List.filterMap (fun h ->
        match h |> List.head_v0 with
        | "Expires" -> Just ["Expires"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "Date" -> Just ["Date"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "Age" -> Nothing // sometimes missing from CDN response
        | "Last-Modified" -> Just ["Last-Modified"; "xxx, xx xxx xxxx xx:xx:xx xxx"]
        | "X-GUploader-UploadID" -> Just ["X-GUploader-UploadID"; "xxx"]
        | _ -> Just h)
      |> List.sortBy (fun h -> List.head_v0 h)
    { code = Test.httpResponseStatusCode response; body = Test.httpResponseBody response; headers = headers})


// serve_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.serve_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serve_v0 "abcdef1234" "index.html") =
//   Ok { body = "<html><body>Hello world</body></html>\n"; headers = fsharp200HtmlHeaders 0; code = 200 }

// [test.serve_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// StaticAssets.serve_v0 "abcdef1234" "favicon-32x32.png" = Error "Response was not UTF-8 safe"

// [test.serve_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serve_v0 "abcdef1234" "index.html") =
//   Ok { body = "<html><body>Hello world</body></html>\n"; headers = fsharp200HtmlHeaders 0; code = 200 }

[test.serve_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
canonicalizeFSharpBadResponse (StaticAssets.serve_v0 "abcdef1234" "no-file-with-this-name") =
  Ok { body = ""; headers = fsharp404Headers 0; code = 404 }

[test.serve_v0 nohash] with ExactCanvasName test-static-assets-deploy
canonicalizeFSharpBadResponse (StaticAssets.serve_v0 "xx" "index.html") =
  Ok { body = ""; headers = fsharp404Headers 0; code = 404 }


// serveLatest_v0
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.serveLatest_v0 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v0 "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"; headers = fsharp200HtmlHeaders 0; code = 200 }

// [test.serveLatest_v0 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v0 "favicon-32x32.png") =
//   Ok { body = getPng 0
//        headers = fsharp200PngHeaders 0;
//        code = 200 }

// [test.serveLatest_v0 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v0 "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"; headers = fsharp200HtmlHeaders 0; code = 200 }

[test.serveLatest_v0 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
canonicalizeFSharpBadResponse (StaticAssets.serveLatest_v0 "no-file-with-this-name") =
  Ok { body = Test.intArrayToBytes []; headers = fsharp404Headers 0; code = 404 }

[test.serveLatest_v0 nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.serveLatest_v0 "index.html" = Test.typeError "No deploy hash found"




// serve_v1
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.serve_v1 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serve_v1 "abcdef1234" "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"
//        headers = fsharp200HtmlHeaders 0;
//        code = 200 }

// [test.serve_v1 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serve_v1 "abcdef1234" "favicon-32x32.png") =
//   Ok { body = getPng 0
//        headers = fsharp200PngHeaders 0;
//        code = 200 }

// [test.serve_v1 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serve_v1 "abcdef1234" "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"
//        headers = fsharp200HtmlHeaders 0;
//        code = 200 }

[test.serve_v1 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
canonicalizeFSharpBadResponse (StaticAssets.serve_v1 "abcdef1234" "no-file-with-this-name") =
  Ok { body = Test.intArrayToBytes []; headers = fsharp404Headers 0; code = 404 }

[test.serve_v1 nohash] with ExactCanvasName test-static-assets-deploy
canonicalizeFSharpBadResponse (StaticAssets.serve_v1 "xx" "index.html") =
  Ok { body = Test.intArrayToBytes []; headers = fsharp404Headers 0; code = 404 }


// serveLatest_v1
// CLEANUP disable these because tests randomly fail in CI - https://github.com/darklang/dark/issues/3564
// [test.serveLatest_v1 html] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v1 "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"
//        headers = fsharp200HtmlHeaders 0;
//        code = 200 }

// [test.serveLatest_v1 png] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v1 "favicon-32x32.png") =
//   Ok { body = getPng 0
//        headers = fsharp200PngHeaders 0;
//        code = 200 }

// [test.serveLatest_v1 different] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash nofileshere, StaticAssetsDeployHash abcdef1234
// canonicalizeFSharpGoodResponse (StaticAssets.serveLatest_v1 "index.html") =
//   Ok { body = String.toBytes "<html><body>Hello world</body></html>\n"
//        headers = fsharp200HtmlHeaders 0;
//        code = 200 }

[test.serveLatest_v1 missing] with ExactCanvasName test-static-assets-deploy, StaticAssetsDeployHash abcdef1234
canonicalizeFSharpBadResponse (StaticAssets.serveLatest_v1 "no-file-with-this-name") =
  Ok { body = Test.intArrayToBytes []; headers = fsharp404Headers 0; code = 404 }

[test.serveLatest_v1 nohash] with ExactCanvasName test-static-assets-deploy
StaticAssets.serveLatest_v1 "index.html" = Test.typeError "No deploy hash found"
