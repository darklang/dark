html {
  height: 100%;
}

/* From "default dark" in https://chriskempson.github.io/base16/ */
@black1: #181818;
@black2: #282828;
@grey1 : #383838;
@grey2 : #585858;
@grey3 : #b8b8b8;
@white3: #d8d8d8;
@white2: #e8e8e8;
@white1: #f8f8f8;
@red   : #ab4642;
@orange: #dc9656;
@yellow: #f7ca88;
@green : #a1b56c;
@cyan  : #86c1b9;
@blue  : #7cafc2;
@purple: #ba8baf;
@brown : #a16946;

@selected-background: lighten(@black1, 5%);
@top-border: lighten(@black1, 5%) 2px dotted;
@blank-underline: 1px dashed @grey2;

::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 7px;
}
::-webkit-scrollbar-thumb {
  border-radius: 7px;
  background-color: @grey1;
}

.default() {
  margin: 0;
  padding: 0;
  background-color: @black2;
  color: @grey3;
}

body {
  .default;
  height: 100%;
}

/********************
 * Top level
 ********************/

#grid {
  background: @black1;
  height: 100vh;
  overflow: hidden;
  position: relative;

  -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}

body #grid * {
  &:not(.fa) { // skip fontawesome
    font-family: 'Fira Code', monospace;
  }
}

#canvas {
  display: block;
  height: 100%;
  overflow: hidden;
  position: relative;
  width: 100%;
  .node {
    position: absolute;
  }
}

#buttons {
  bottom: 0;
  left: 0px;
  position: absolute;

  .specialButton {
    margin-right: 4px;
    &#integrationTestSignal {
      display: inline-block;
    }
  }
}

#status {
  &.error {
    color: red;
  }
}

.as-pointer {
  cursor: pointer;
}

.verb-link {
  &:hover {
    color: @orange;
    text-decoration: underline;
  }
}

.axis {
  background: #777;
  height: 200%;
  position: absolute;
  transform: translate(0, -50%);
  width: 1px;
  &.horizontal {
    height: 1px;
    transform: translate(-50%, 0);
    width: 200%;
  }
}

//*************
// Toplevel
//*************
.toplevel {
  display: flex;
  flex-direction: column;
  width: max-content;
  min-width: 245px;
  padding: 4px;
  border: @top-border;

  &.selected {
    background-color: @selected-background;
    outline: 0.4px darken(magenta, 25%) dotted;
  }

  .mouseovered {
    background-color: @grey1;
    &.blank {
      color: @grey3;
    }
  }

  .selected {
    outline: 0.5px magenta solid;
  }

  .blank {
    min-width: 8ch;
    .blank-box-style;
    .blank-text-style;
  }

  .view-data {
    bottom: 100%;
    left: 0px;
    position: absolute;
    width: 100%;
    &.live-view-selection-active {
      bottom: calc(~"100% + 22px");
    }
    ul.request-cursor {
      bottom: 1em;
      float: left;
      list-style-type: none;
      max-height: calc(~"1.5em + 1px");
      overflow: hidden;
      width: 100%;
      li {
        float: left;
        &.mouseovered {
          color: orange;
          &:before {
            background-color: @grey1;
            bottom: calc(~"-100% + 3.5em");
            content: attr(data-content);
            display: block;
            font-size: 0.7em;
            left: 0;
            // max-height: 6em;
            max-width: 100%;
            overflow: auto;
            position: absolute;
            width: auto;
            word-wrap: break-word;
            white-space: pre;
          }
        }
        &.active {
          border-bottom: 1px solid orange;
        }
      }
    }
  }
}

//*************
// Routing table
//*************
.viewing-table {
  background-color: @black2;
  border: 2px solid @blue;
  padding: 8px;
  position: relative;
  width: max-content;
  z-index: 20;

  .header {
    width: 300px;
    color: @orange;
    padding-bottom: 8px;
    margin-bottom: 8px;
    border-bottom: 2px @white3 solid;

    .title {
      margin-right: 5px;
    }
    .count {
      font-weight: bold;
    }
  }

  .fofs {
    .fof {
      display: flex;
      flex-direction: row;
      justify-content: space-between;

      .path {
        color: @white3;
      }

      .modifier {
        color: @grey2;
      }
    }
  }

  .http-routes {
    .routes {
      padding-bottom: 8px;
      margin-bottom: 8px;
      border-bottom: 2px @purple solid;
    }

    .handler {
      display: flex;
      flex-direction: row;
      justify-content: space-between;

      .url{
        color: @white3;
        .prefix {
          color: @grey2;
        }
      }

      .external {
        color: @orange;
      }

      .verbs {
        color: @grey2;
      }
    }
  }
}

//*************
// DB
//*************
.db {
  margin: 10px;
  display: flex;
  flex-direction: column;

  .dbname {
    background-image: url('/static/_db.png');
    background-position: left center;
    background-repeat: no-repeat;
    padding-left: 20px; /* Adjust according to image size to push text across. */
    margin-bottom: 10px;
    margin: 0 auto; /* center the db name */
    &::before {
      content: "DB: ";
      font-weight: bold;
      font-size: 110%;
    }
  }

  .col {
    display: flex;
    flex-direction: row;
    text-align: center;

    .name, .type {
      flex: 1;
      &.blank {
        width: 96; // put it all on one line
      }
    }

  }
}

.user-fn {
  margin: 10px;
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid @orange;
  padding-bottom: 10px;

  .ufn-name {
    padding-bottom: 10px;
    margin: 0 auto;
  }

  .col {
    display: flex;
    flex-direction: row;
    text-align: center;

    .name, .type {
      flex: 1;
      &.blank {
        width: 96; // put it all on one line
      }
    }

  }
}


//*************
// Handler
//*************

.toplevel .spec-header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;

  color: @orange;
  font-size: 8pt;

  border-bottom: 1px solid @orange;
  padding-bottom: 4px;

  .name, .modifier, .module {
    margin: 0 4px;
  }

  // remove dotted outline after clicking (source: reset-normalize)
  a:focus {
    outline: none;
  }
  .external {
    padding-right: 1ch;
    color: @orange;
    vertical-align: center;
  }
}




//*************
// AST macros
//*************
.indent() {
  margin-left: 16px;
}

.string-style() {
    color: @purple;
    font-style: italic;
    letter-spacing: -0.75px;
}

.blank-box-style() {
  height: 15px;
  border-bottom: @blank-underline;
}
.blank-text-style() {
  color: @grey2;
  font-style: italic;
  font-size: 8pt;
  text-align: center;
}

.layout-block() {
  display: block;
}

.layout-inline() {
  display: inline-block;
}

.highlighted-indent() {
  margin-left: 8px;
  padding-left: 8px;
  border-left: 1px solid @orange;
}

//*************
// AST
//*************
.ast {
  font-size: 10pt;
  padding-right: 8px;
  padding-left: 8px;
  padding-top: 24px;
  padding-bottom: 24px;
  white-space: pre;
  width: max-content;
  // border: @top-border;
  .layout-block;

  div {
    .layout-inline;
    vertical-align: top;
  }

  .value-error {
    @highlight: rgba(255, 0, 0, 0.4);
    background-image:
      linear-gradient(45deg, transparent 65%, @highlight 80%, transparent 90%),
      linear-gradient(135deg, transparent 5%, @highlight 15%, transparent 25%),
      linear-gradient(135deg, transparent 45%, @highlight 55%, transparent 65%),
      linear-gradient(45deg, transparent 25%, @highlight 35%, transparent 50%);
    background-repeat: repeat-x;
    background-size: 8px 2px;
    background-position:0 95%;
  }

  .letexpr > .letbody {
    .layout-block;
  }

  .lambdaexpr {
    .layout-block;
    .highlighted-indent;
  }

  .lambdabinding, .arrow {
    color: @orange;
  }

  .value.tstr {
    .string-style;
  }

  .related-change {
    color: @yellow;
  }

  .lambdabody {
    .layout-block;
  }

  .ifbody {
    .layout-block;
    .indent;
  }

  .elsebody {
    .layout-block;
    .indent;
  }

  .atom {
    margin-left: 4px;
    margin-right: 4px;
  }

  .atom.fieldaccessop {
    margin-left: -4px;
    margin-right: 0px;
  }

  .atom.fieldname {
    margin-left: 0px;
  }

  .moduleseparator {
    color: @green;
  }

  .keyword, .emit {
    color: @green;
  }

  .execution-button {
    color: red;
    font-size: 60%;
    margin-left: -4px;
  }

  .precedence-1 {
    &,
    & .entry form #search-container #suggestionBox,
    & .string-entry
    {
      background-color: lighten(@black1, 10%);
    }
    .precedence-2 {
      &,
      & .entry form #search-container #suggestionBox,
      & .string-entry
      {
        background-color: lighten(@black1, 15%);
      }
      .precedence-3{
        &,
        & .entry form #search-container #suggestionBox,
        & .string-entry
        {
          background-color: lighten(@black1, 20%);
        }
        .precedence-4 {
          &,
          & .entry form #search-container #suggestionBox,
          & .string-entry
          {
            background-color: lighten(@black1, 25%);
          }
          .precedence-5 {
            &,
            & .entry form #search-container #suggestionBox,
            & .string-entry
            {
              background-color: lighten(@black1, 30%);
            }
            .precedence-6 {
              &,
              & .entry form #search-container #suggestionBox,
              & .string-entry
              {
                background-color: lighten(@black1, 35%);
              }
            }
          }
        }
      }
    }
  }

  .threadexpr {
    .threadmember {
      .layout-block;

      &:first-child > .thread.pipe {
        display: none;
      }

      .thread.pipe {
        margin-top: 1px;
        margin-right: 0px;
        font-size: 70%;
        color: @blue;
      }
    }
  }
}

/********************
 * Entry box
 ********************/

// TODO: figure out proper entry box positioning
// -- this is a demo hack
.spec-header .entry form {
  margin-top: 0px;
}

.db .entry form {
  position: relative;
  margin-top: 0px;
}

.ast .entry form {
  position: relative;
  margin-top: 0px;
}


.entry {
  // headers need to be relative to position them. We need to be above
  // the headers, and position:relative allows us to do it.
  cursor: default;
  background: @black2;
  color: @white3;
  width: auto;

  /* width: 96px; // keeps autocomplete appearing when Creating */
  .types {
    float: right;
    text-transform: lowercase;
    font-family: monospace;
    font-size: 80%;
  }
  form {
    // makes the form takes up no space in the DOM, meaning we don't
    // expand the top-level
    position: absolute;

    // account for the space of both input boxes
    margin-top: -12px;

    #search-container {
      border-bottom: @blank-underline;
      font-size: 8pt;
      height: 15px;
      min-width: 8ch;
      position: relative;
      // width: 100px;
      #entry-box {
        // as much like the blank box as possible
        background: transparent;
        color: @grey3;
        padding-right: 1ch;
        position: relative;
        text-align: left;
        vertical-align: baseline;
        width: 100%;
        z-index: 20;
      }
      #suggestionBox {
        background: @selected-background;
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
      }
    }
  }
  #autocomplete-holder {

    text-align: initial;
    overflow-y: scroll;
    max-height: 90px;
    font-size: 85%;
    width: 350px;

    .autocomplete-item {
      background: @black2;
      &.highlighted {
        background: #1c3670;
      }
      &.greyed {
        color: @grey2;
      }
    }
  }
}

.omnibox {
  // honestly couldnt tell you where this magic number comes from
  margin-top: -9px;
  .string-entry {
    margin-top: -21px;
  }
}


// ---------------------------
// Strings
// ---------------------------
.string-entry {
  position: relative;
  background: @selected-background;
  #entry-box {
    .blank-box-style;
    .string-style;
    background: transparent;
  }
}

.string-container::before {
  content: "“";
  .string-style;
}

.string-container::after{
  content: "”";
  .string-style;
}


// ---------------------------
// Types
// ---------------------------
/*
.spec-type {
  .blank-text-style;
  padding: 8px;

  & > :not(.header)  {
    margin-left: 2ch;
  }
  .type-object {
    .layout-block;
    span {
      .layout-inline;
    }
    margin-left: 2ch;
    .colon {
      padding-right: 0.5ch;
    }
  }
}
*/

// ---------------------------
// Feature-flags
// ---------------------------

// This creates an ancestor for .feature-flag to be absolute positioned
// against.
.sidebar-box {
  background: @black1;
  position: relative;
  z-index: 10;
  &.dragging {
    z-index: 30;
  }
  &.selected {
    z-index: 25;
  }
}

.selected[title] {
  &:after {
    bottom: calc(100% + 2px);
    color: magenta;
    content: attr(title);
    display: block;
    left: 0;
    outline: 0.4px @green solid;
    position: absolute;
  }
}

.computed-value {
  &:before {
    color: @green;
    content: attr(computed-value);
    outline: 0.4px @green dotted;
    position: absolute;
    right: calc(100% + 0.4px);
    .default;
  }
}

.feature-flag {
  position: absolute;
  right: -16px;
  .default;
}

.edit-fn {
  position: absolute;
  .default;
}

.flagged {

  .fa-flag {
    color: @red;
    font-size: 8px;
  }

  .setting-slider {
    position: absolute;
    left: 110%;
    margin-top: -10px;
  }

  .end-ff {
    position: absolute;
    left: 165%;
    margin-top: -9px;
    &.valid-action {
      color: @green;
    }
    &.invalid-action {
      color: @red;
    }
  }

  .hidden {
    background-color: blue;
  }
  .flag-message {
    margin-top: -10px;
    position: absolute;
    left: 100% + 10px;
  }
  .setting-slider {
    margin-top: 30px;
    position: absolute;
  }
  .feature-flag {
    display: none;
  }
  .nested-flag {

    position: absolute;
    left: 100%;

    &.flag-left {
      margin-top: -50px;
    }
    &.flag-right {
      margin-top: 50px;
    }
  }

}
